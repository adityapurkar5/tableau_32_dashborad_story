<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.23.0507.0956                               -->
<workbook original-version='18.1' source-build='2022.2.9 (20222.23.0507.0956)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <CascadingFilters />
    <CascadingFiltersHamburgerUI />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Parameter for Health Exp % GDP' datatype='real' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='20.'>
        <calculation class='tableau' formula='20.' />
        <range min='1.0' />
      </column>
    </datasource>
    <datasource caption='LexC' inline='true' name='federated.09i3abd1eu64rf14zy6yc025qbut' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='LexC' name='textscan.0pmo81j16vnqfq19eofsr1dxoxz7'>
            <connection class='textscan' directory='D:/Business Analytics Course/Course Material/Tableau/Assignments' filename='LexC.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0pmo81j16vnqfq19eofsr1dxoxz7' name='LexC.csv' table='[LexC#csv]' type='table'>
          <columns character-set='UTF-16LE' header='yes' locale='en_IN' separator='&#9;'>
            <column datatype='real' name='Birth Rate' ordinal='0' />
            <column datatype='string' name='Business Tax Rate' ordinal='1' />
            <column datatype='integer' name='CO2 Emissions' ordinal='2' />
            <column datatype='string' name='Birth Rate Classificaton' ordinal='3' />
            <column datatype='string' name='Above Health Exp Threshold?' ordinal='4' />
            <column datatype='real' name='GDP per Capita' ordinal='5' />
            <column datatype='string' name='Country' ordinal='6' />
            <column datatype='integer' name='Days to Start Business' ordinal='7' />
            <column datatype='string' name='Ease of Business' ordinal='8' />
            <column datatype='integer' name='Energy Usage' ordinal='9' />
            <column datatype='integer' name='GDP' ordinal='10' />
            <column datatype='real' name='Health Exp % GDP' ordinal='11' />
            <column datatype='integer' name='Health Exp/Capita' ordinal='12' />
            <column datatype='string' name='Hours to do Tax' ordinal='13' />
            <column datatype='real' name='Infant Mortality Rate' ordinal='14' />
            <column datatype='real' name='Internet Usage' ordinal='15' />
            <column datatype='real' name='Lending Interest' ordinal='16' />
            <column datatype='integer' name='Life Expectancy Female' ordinal='17' />
            <column datatype='integer' name='Life Expectancy Male' ordinal='18' />
            <column datatype='real' name='Mobile Phone Usage' ordinal='19' />
            <column datatype='integer' name='Number of Records' ordinal='20' />
            <column datatype='real' name='Population 0-14' ordinal='21' />
            <column datatype='real' name='Population 15-64' ordinal='22' />
            <column datatype='real' name='Population 65+' ordinal='23' />
            <column datatype='integer' name='Population Total' ordinal='24' />
            <column datatype='real' name='Population Urban' ordinal='25' />
            <column datatype='string' name='Region' ordinal='26' />
            <column datatype='integer' name='Tourism Inbound' ordinal='27' />
            <column datatype='integer' name='Tourism Outbound' ordinal='28' />
            <column datatype='date' name='Year' ordinal='29' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0pmo81j16vnqfq19eofsr1dxoxz7' name='LexC.csv' table='[LexC#csv]' type='table'>
          <columns character-set='UTF-16LE' header='yes' locale='en_IN' separator='&#9;'>
            <column datatype='real' name='Birth Rate' ordinal='0' />
            <column datatype='string' name='Business Tax Rate' ordinal='1' />
            <column datatype='integer' name='CO2 Emissions' ordinal='2' />
            <column datatype='string' name='Birth Rate Classificaton' ordinal='3' />
            <column datatype='string' name='Above Health Exp Threshold?' ordinal='4' />
            <column datatype='real' name='GDP per Capita' ordinal='5' />
            <column datatype='string' name='Country' ordinal='6' />
            <column datatype='integer' name='Days to Start Business' ordinal='7' />
            <column datatype='string' name='Ease of Business' ordinal='8' />
            <column datatype='integer' name='Energy Usage' ordinal='9' />
            <column datatype='integer' name='GDP' ordinal='10' />
            <column datatype='real' name='Health Exp % GDP' ordinal='11' />
            <column datatype='integer' name='Health Exp/Capita' ordinal='12' />
            <column datatype='string' name='Hours to do Tax' ordinal='13' />
            <column datatype='real' name='Infant Mortality Rate' ordinal='14' />
            <column datatype='real' name='Internet Usage' ordinal='15' />
            <column datatype='real' name='Lending Interest' ordinal='16' />
            <column datatype='integer' name='Life Expectancy Female' ordinal='17' />
            <column datatype='integer' name='Life Expectancy Male' ordinal='18' />
            <column datatype='real' name='Mobile Phone Usage' ordinal='19' />
            <column datatype='integer' name='Number of Records' ordinal='20' />
            <column datatype='real' name='Population 0-14' ordinal='21' />
            <column datatype='real' name='Population 15-64' ordinal='22' />
            <column datatype='real' name='Population 65+' ordinal='23' />
            <column datatype='integer' name='Population Total' ordinal='24' />
            <column datatype='real' name='Population Urban' ordinal='25' />
            <column datatype='string' name='Region' ordinal='26' />
            <column datatype='integer' name='Tourism Inbound' ordinal='27' />
            <column datatype='integer' name='Tourism Outbound' ordinal='28' />
            <column datatype='date' name='Year' ordinal='29' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-16LE&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birth Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Birth Rate]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Birth Rate</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business Tax Rate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Business Tax Rate]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Business Tax Rate</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 Emissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CO2 Emissions]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>CO2 Emissions</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birth Rate Classificaton</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Birth Rate Classificaton]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Birth Rate Classificaton</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Above Health Exp Threshold?</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Above Health Exp Threshold?]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Above Health Exp Threshold?</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP per Capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP per Capita]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>GDP per Capita</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Days to Start Business</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Days to Start Business]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Days to Start Business</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ease of Business</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ease of Business]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Ease of Business</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy Usage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Energy Usage]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Energy Usage</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Exp % GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health Exp % GDP]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Health Exp % GDP</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Exp/Capita</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health Exp/Capita]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Health Exp/Capita</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hours to do Tax</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Hours to do Tax]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Hours to do Tax</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infant Mortality Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Infant Mortality Rate]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Infant Mortality Rate</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Internet Usage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Internet Usage]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Internet Usage</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lending Interest</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lending Interest]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Lending Interest</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy Female</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Life Expectancy Female]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Life Expectancy Female</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy Male</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Life Expectancy Male]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Life Expectancy Male</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mobile Phone Usage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mobile Phone Usage]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Mobile Phone Usage</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population 0-14</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population 0-14]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Population 0-14</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population 15-64</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population 15-64]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Population 15-64</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population 65+</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population 65+]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Population 65+</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population Total]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Population Total</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Urban</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population Urban]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Population Urban</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tourism Inbound</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tourism Inbound]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Tourism Inbound</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tourism Outbound</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tourism Outbound]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Tourism Outbound</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>29</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' hidden='true' name='[Business Tax Rate]' role='dimension' type='nominal' />
      <column caption='Birth rate' datatype='string' name='[Calculation_1390486417001287680]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Birth Rate]&lt;0.015 THEN &quot;below&quot;&#13;&#10;ELSEIF [Birth Rate]&lt;0.03 THEN &quot;moderate&quot;&#13;&#10;ELSE &quot;above&quot;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='integer' hidden='true' name='[Days to Start Business]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[Ease of Business]' role='dimension' type='nominal' />
      <column datatype='real' name='[Internet Usage]' role='measure' type='quantitative' />
      <column datatype='real' name='[Mobile Phone Usage]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[Region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='integer' default-format='n#,##0,,,.00B;-#,##0,,,.00B' name='[Tourism Inbound]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='n#,##0,,,.00B;-#,##0,,,.00B' name='[Tourism Outbound]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='LexC.csv' datatype='table' name='[__tableau_internal_object_id__].[LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1390486417001287680]' derivation='None' name='[none:Calculation_1390486417001287680:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Internet Usage]' derivation='Sum' name='[sum:Internet Usage:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mobile Phone Usage]' derivation='Sum' name='[sum:Mobile Phone Usage:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='Continent'>
          <field>[Region]</field>
          <field>[Country]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1390486417001287680:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;above&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;moderate&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;below&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.09i3abd1eu64rf14zy6yc025qbut].[sum:Internet Usage:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09i3abd1eu64rf14zy6yc025qbut].[sum:Mobile Phone Usage:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Middle East&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;The Americas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Birth Rate' />
        <field-sort-custom-order field='CO2 Emissions' />
        <field-sort-custom-order field='Calculation_1390486417004957697' />
        <field-sort-custom-order field='Birth Rate Classificaton' />
        <field-sort-custom-order field='Above Health Exp Threshold?' />
        <field-sort-custom-order field='GDP per Capita' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Energy Usage' />
        <field-sort-custom-order field='GDP' />
        <field-sort-custom-order field='Health Exp % GDP' />
        <field-sort-custom-order field='Health Exp/Capita' />
        <field-sort-custom-order field='Hours to do Tax' />
        <field-sort-custom-order field='Infant Mortality Rate' />
        <field-sort-custom-order field='Internet Usage' />
        <field-sort-custom-order field='Lending Interest' />
        <field-sort-custom-order field='Life Expectancy Female' />
        <field-sort-custom-order field='Life Expectancy Male' />
        <field-sort-custom-order field='Mobile Phone Usage' />
        <field-sort-custom-order field='Number of Records' />
        <field-sort-custom-order field='Population 0-14' />
        <field-sort-custom-order field='Population 15-64' />
        <field-sort-custom-order field='Population 65+' />
        <field-sort-custom-order field='Population Total' />
        <field-sort-custom-order field='Population Urban' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Tourism Inbound' />
        <field-sort-custom-order field='Tourism Outbound' />
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Calculation_1390486417001287680' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='LexC.csv' id='LexC.csv_7E2AB4BC7EE5401EBA67D646C167A5BF'>
            <properties context=''>
              <relation connection='textscan.0pmo81j16vnqfq19eofsr1dxoxz7' name='LexC.csv' table='[LexC#csv]' type='table'>
                <columns character-set='UTF-16LE' header='yes' locale='en_IN' separator='&#9;'>
                  <column datatype='real' name='Birth Rate' ordinal='0' />
                  <column datatype='string' name='Business Tax Rate' ordinal='1' />
                  <column datatype='integer' name='CO2 Emissions' ordinal='2' />
                  <column datatype='string' name='Birth Rate Classificaton' ordinal='3' />
                  <column datatype='string' name='Above Health Exp Threshold?' ordinal='4' />
                  <column datatype='real' name='GDP per Capita' ordinal='5' />
                  <column datatype='string' name='Country' ordinal='6' />
                  <column datatype='integer' name='Days to Start Business' ordinal='7' />
                  <column datatype='string' name='Ease of Business' ordinal='8' />
                  <column datatype='integer' name='Energy Usage' ordinal='9' />
                  <column datatype='integer' name='GDP' ordinal='10' />
                  <column datatype='real' name='Health Exp % GDP' ordinal='11' />
                  <column datatype='integer' name='Health Exp/Capita' ordinal='12' />
                  <column datatype='string' name='Hours to do Tax' ordinal='13' />
                  <column datatype='real' name='Infant Mortality Rate' ordinal='14' />
                  <column datatype='real' name='Internet Usage' ordinal='15' />
                  <column datatype='real' name='Lending Interest' ordinal='16' />
                  <column datatype='integer' name='Life Expectancy Female' ordinal='17' />
                  <column datatype='integer' name='Life Expectancy Male' ordinal='18' />
                  <column datatype='real' name='Mobile Phone Usage' ordinal='19' />
                  <column datatype='integer' name='Number of Records' ordinal='20' />
                  <column datatype='real' name='Population 0-14' ordinal='21' />
                  <column datatype='real' name='Population 15-64' ordinal='22' />
                  <column datatype='real' name='Population 65+' ordinal='23' />
                  <column datatype='integer' name='Population Total' ordinal='24' />
                  <column datatype='real' name='Population Urban' ordinal='25' />
                  <column datatype='string' name='Region' ordinal='26' />
                  <column datatype='integer' name='Tourism Inbound' ordinal='27' />
                  <column datatype='integer' name='Tourism Outbound' ordinal='28' />
                  <column datatype='date' name='Year' ordinal='29' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='gdp vs gdp per capita'>
      <table>
        <view>
          <datasources>
            <datasource caption='LexC' name='federated.09i3abd1eu64rf14zy6yc025qbut' />
          </datasources>
          <datasource-dependencies datasource='federated.09i3abd1eu64rf14zy6yc025qbut'>
            <column datatype='real' name='[GDP per Capita]' role='measure' type='quantitative' />
            <column datatype='integer' name='[GDP]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[Region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[GDP per Capita]' derivation='Avg' name='[avg:GDP per Capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP]' derivation='Avg' name='[avg:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Region:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09i3abd1eu64rf14zy6yc025qbut].[avg:GDP:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Region:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09i3abd1eu64rf14zy6yc025qbut].[avg:GDP per Capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.09i3abd1eu64rf14zy6yc025qbut].[avg:GDP:qk] + [federated.09i3abd1eu64rf14zy6yc025qbut].[avg:GDP per Capita:qk])</rows>
        <cols>[federated.09i3abd1eu64rf14zy6yc025qbut].[tyr:Year:qk]</cols>
      </table>
      <simple-id uuid='{6DECB33C-9514-4E3D-A93E-836F87BF2E9C}' />
    </worksheet>
    <worksheet name='parameter'>
      <table>
        <view>
          <datasources>
            <datasource caption='LexC' name='federated.09i3abd1eu64rf14zy6yc025qbut' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter for Health Exp % GDP' datatype='real' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='20.'>
              <calculation class='tableau' formula='20.' />
              <range min='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.09i3abd1eu64rf14zy6yc025qbut'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[Health Exp % GDP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Health Exp/Capita]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Health Exp % GDP]' derivation='Sum' name='[sum:Health Exp % GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health Exp/Capita]' derivation='Sum' name='[sum:Health Exp/Capita:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Country:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Health Exp % GDP])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.09i3abd1eu64rf14zy6yc025qbut].[sum:Health Exp % GDP:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.09i3abd1eu64rf14zy6yc025qbut].[sum:Health Exp % GDP:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.09i3abd1eu64rf14zy6yc025qbut].[sum:Health Exp/Capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Country:nk]</rows>
        <cols>([federated.09i3abd1eu64rf14zy6yc025qbut].[sum:Health Exp % GDP:qk] + [federated.09i3abd1eu64rf14zy6yc025qbut].[sum:Health Exp/Capita:qk])</cols>
      </table>
      <simple-id uuid='{6ABD1F1B-9758-48BD-B7FF-FBA838529906}' />
    </worksheet>
    <worksheet name='phones vs internet'>
      <table>
        <view>
          <datasources>
            <datasource caption='LexC' name='federated.09i3abd1eu64rf14zy6yc025qbut' />
          </datasources>
          <datasource-dependencies datasource='federated.09i3abd1eu64rf14zy6yc025qbut'>
            <column datatype='real' name='[Internet Usage]' role='measure' type='quantitative' />
            <column datatype='real' name='[Mobile Phone Usage]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Internet Usage]' derivation='Sum' name='[sum:Internet Usage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mobile Phone Usage]' derivation='Sum' name='[sum:Mobile Phone Usage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09i3abd1eu64rf14zy6yc025qbut].[sum:Mobile Phone Usage:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.09i3abd1eu64rf14zy6yc025qbut].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09i3abd1eu64rf14zy6yc025qbut].[sum:Internet Usage:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.09i3abd1eu64rf14zy6yc025qbut].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.90055251121520996' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09i3abd1eu64rf14zy6yc025qbut].[sum:Mobile Phone Usage:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.09i3abd1eu64rf14zy6yc025qbut].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='78' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.09i3abd1eu64rf14zy6yc025qbut].[sum:Internet Usage:qk] + [federated.09i3abd1eu64rf14zy6yc025qbut].[sum:Mobile Phone Usage:qk])</rows>
        <cols>[federated.09i3abd1eu64rf14zy6yc025qbut].[yr:Year:ok]</cols>
      </table>
      <simple-id uuid='{E07E30B5-8691-4C4A-A142-0075303A6FC2}' />
    </worksheet>
    <worksheet name='pupulation map'>
      <table>
        <view>
          <datasources>
            <datasource caption='LexC' name='federated.09i3abd1eu64rf14zy6yc025qbut' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.09i3abd1eu64rf14zy6yc025qbut'>
            <column datatype='real' name='[Birth Rate]' role='measure' type='quantitative' />
            <column caption='Birth rate' datatype='string' name='[Calculation_1390486417001287680]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Birth Rate]&lt;0.015 THEN &quot;below&quot;&#13;&#10;ELSEIF [Birth Rate]&lt;0.03 THEN &quot;moderate&quot;&#13;&#10;ELSE &quot;above&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Population Total]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1390486417001287680]' derivation='None' name='[none:Calculation_1390486417001287680:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population Total]' derivation='Sum' name='[sum:Population Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Calculation_1390486417001287680:nk]' />
              <size column='[federated.09i3abd1eu64rf14zy6yc025qbut].[sum:Population Total:qk]' />
              <lod column='[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Country:nk]' />
              <lod column='[federated.09i3abd1eu64rf14zy6yc025qbut].[sum:Population Total:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09i3abd1eu64rf14zy6yc025qbut].[Latitude (generated)]</rows>
        <cols>[federated.09i3abd1eu64rf14zy6yc025qbut].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{CF2F8EB0-E040-47A2-B88E-0C03E140D2BD}' />
    </worksheet>
    <worksheet name='tourism inbound'>
      <table>
        <view>
          <datasources>
            <datasource caption='LexC' name='federated.09i3abd1eu64rf14zy6yc025qbut' />
          </datasources>
          <datasource-dependencies datasource='federated.09i3abd1eu64rf14zy6yc025qbut'>
            <column caption='Continent' datatype='string' name='[Region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' default-format='n#,##0,,,.00B;-#,##0,,,.00B' name='[Tourism Inbound]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Tourism Inbound]' derivation='Avg' name='[avg:Tourism Inbound:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Region:nk]' filter-group='3'>
            <groupfilter function='except' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09i3abd1eu64rf14zy6yc025qbut].[avg:Tourism Inbound:qk]</rows>
        <cols>[federated.09i3abd1eu64rf14zy6yc025qbut].[yr:Year:ok]</cols>
      </table>
      <simple-id uuid='{B90A0067-6795-4AFA-9D4B-218646577519}' />
    </worksheet>
    <worksheet name='tourism outbound'>
      <table>
        <view>
          <datasources>
            <datasource caption='LexC' name='federated.09i3abd1eu64rf14zy6yc025qbut' />
          </datasources>
          <datasource-dependencies datasource='federated.09i3abd1eu64rf14zy6yc025qbut'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Continent' datatype='string' name='[Region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' default-format='n#,##0,,,.00B;-#,##0,,,.00B' name='[Tourism Inbound]' role='measure' type='quantitative' />
            <column datatype='integer' default-format='n#,##0,,,.00B;-#,##0,,,.00B' name='[Tourism Outbound]' role='measure' type='quantitative' />
            <column-instance column='[Tourism Inbound]' derivation='Avg' name='[avg:Tourism Inbound:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tourism Outbound]' derivation='Avg' name='[avg:Tourism Outbound:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tourism Outbound]' derivation='Sum' name='[sum:Tourism Outbound:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Region:nk]' filter-group='3'>
            <groupfilter function='except' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.09i3abd1eu64rf14zy6yc025qbut].[sum:Tourism Outbound:qk]' included-values='non-null' />
          <slices>
            <column>[federated.09i3abd1eu64rf14zy6yc025qbut].[sum:Tourism Outbound:qk]</column>
            <column>[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.09i3abd1eu64rf14zy6yc025qbut].[avg:Tourism Outbound:qk]' />
              <color column='[federated.09i3abd1eu64rf14zy6yc025qbut].[avg:Tourism Outbound:qk]' />
              <text column='[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Country:nk]' />
              <text column='[federated.09i3abd1eu64rf14zy6yc025qbut].[avg:Tourism Inbound:qk]' />
              <text column='[federated.09i3abd1eu64rf14zy6yc025qbut].[avg:Tourism Outbound:qk]' />
              <lod column='[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Country:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Country:nk]</run>
                <run>&gt;&#10;TI=&lt;</run>
                <run>[federated.09i3abd1eu64rf14zy6yc025qbut].[avg:Tourism Inbound:qk]</run>
                <run>&gt;&#10;TO=&lt;</run>
                <run>[federated.09i3abd1eu64rf14zy6yc025qbut].[avg:Tourism Outbound:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='7' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D91C7C42-8892-49AF-B4B8-11D9D59F93A5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='LexC' name='federated.09i3abd1eu64rf14zy6yc025qbut' />
      </datasources>
      <datasource-dependencies datasource='federated.09i3abd1eu64rf14zy6yc025qbut'>
        <column caption='Continent' datatype='string' name='[Region]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='1' name='tourism inbound' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='8' name='tourism outbound' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='24625' id='6' name='tourism inbound' param='[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Region:nk]' type-v2='filter' values='cascading' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='19500' id='7' name='tourism inbound' pane-specification-id='0' param='[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Region:nk]' type-v2='color' w='16000' x='83200' y='25625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9125' id='9' name='tourism outbound' pane-specification-id='0' param='[federated.09i3abd1eu64rf14zy6yc025qbut].[avg:Tourism Outbound:qk]' type-v2='color' w='16000' x='83200' y='45125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{D99517A9-18CC-4477-A0F0-4DACE82E51D5}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='574' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='83506' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='15664'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Tourism Inbound and Outbound for developed countires are better than developing countries' captured-sheet='Dashboard 1' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{2A9E3F73-72FE-4E8E-A300-FF8DABB6CADD}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='pupulation map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09i3abd1eu64rf14zy6yc025qbut].[sum:Population Total:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Calculation_1390486417001287680:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Calculation_1390486417001287680:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{0A1822C5-AB46-4A1A-B3E1-A3967B58512B}' />
    </window>
    <window class='worksheet' name='parameter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EAA31CC5-9E1F-49C9-A0A1-A9E26BB26D42}' />
    </window>
    <window class='worksheet' name='phones vs internet'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.09i3abd1eu64rf14zy6yc025qbut].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.09i3abd1eu64rf14zy6yc025qbut].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9ABFE464-C248-446B-9741-D467FBCFFF01}' />
    </window>
    <window class='worksheet' name='gdp vs gdp per capita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{97D6766B-2733-4319-877F-7B9A3704776C}' />
    </window>
    <window class='worksheet' name='tourism inbound'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Region:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight field='[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Region:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{64C76830-7B37-4080-BB3B-5EE4E61C04E1}' />
    </window>
    <window class='worksheet' name='tourism outbound'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09i3abd1eu64rf14zy6yc025qbut].[avg:Tourism Outbound:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09i3abd1eu64rf14zy6yc025qbut].[avg:Tourism Outbound:qk]</field>
            <field>[federated.09i3abd1eu64rf14zy6yc025qbut].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{66E86FCB-1021-4567-BE19-AC2E32A3DCA6}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='tourism inbound'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='tourism outbound' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{24E8D096-A249-4E1D-A160-A9414535F971}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{04F67193-1D3F-4A67-BF6B-D1D1047CAE2E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dSXAj2XnnfwAygcS+kgSX4k5WsZaupVd1t1pSt1qWW3Y4bMkTlu1w2BEz
      npiTI+YyMeE5zhI+zNWHsS8Tjhg77NGMF3XbVqs9kqxuq3dV104WyeIOEvsO5IY5gKwiiwSZ
      AElwy98Ficz3ZT4g859v+973LLVarYaJyRnFetQZMDE5SkwBmJxpTAGYnGlMAZicaUwBmJxp
      9i2AlZWV5tIvb08fn58kXdlfPianJvd3ApMzyRYBzH76Hndj+3wSWyC+MEVmn5edmpo6mMyY
      nCmEzV/m5+dJplz4GGf2zsc4vGGSuRJfu9zBe9PwrVcu8vY7bxOoWVizlPH4BlCyq3S/9Qbf
      +8vv0z/cz9il67z7N3/O2IUr3L5zh0uXLvJoaY1f/aVvAvDZzz/jWz2v8Cd//LfceOE88ZxK
      vwPu3fqcR8VFei69QvrR5+Dwkkjm+NbXLvN/3pvm2996hbfffoehQI1Heg/u4iNCF16junwb
      2Soxvxw/kj/Q5GSzpQTo7+/nwpXr9EXD5KoaL7zwPJJcoLTNrMKl577Om68+V/9qEfB6nWi6
      Bcluw+UPc+36dYKhINev38Bu1badoXdghGefexGtnAVg4sp1vvYLb/Dw1k2SuSovvfACfZLM
      8vaLM3HlOi9eO89aMsdqqsDLL71If0/HAfwdJmeNLQLwBQOk4nE0TUOXq1Rkmayi4XO6Ucsl
      1pbnqagAEp2d/ieGcpWxq88z0efkg88etpQRuVpl8uan9I5dwKrLFCsyi1mFDp8Ti1omtbZM
      oX7xLehKmWJVZi2ebOm6Jmcby9OuELOTd3FHzhH2CNy+O8noxEXcDpG56fsInk4koYYAuMNh
      BCCZTBIOh1lZmCVV0rl4foTU+r7kU588Tu8nmSyufyZxOh0szj3CGejiXHcHuiZz5/Zd+kcn
      8LsdLM1NowoePJKAJIDVHcahF8lWrfglC7fuPiDS1U1vtPMI/kKTk8w2AZiYnCXMcQCTM40p
      AJMzjSkAkzONKYATTiGdoKzUSCQSR52VE4nZCD7hKMUE7/74Q1yBHqJeUO0+tEISKdhNaW0W
      d/c44wPRo87mscUsAU44ojtCOZfj5Zeu8P4HH5LNZFlJ5Llz+zaTczHz4d8DYe8kJsedZ248
      i90q8Nxz1xC9QVAr9PT1IYnm+20v2lYF0nUdq9W8ISbHi7Y9kWZTw+Q4Yr6STc40pgBMzjSm
      AEzONKYATM40pgBMzjRNjwPElxfIKmCpFpCxMzE+Qmp1ieXVJH0D/czPLRLu6iEVm0W1Orl+
      5eJh5NvE5EBoSgC6UiIrW6gpRSyCHfv6/kyhyuUrI3zww5tc/frLrM7MUKlUUS317k9d19F1
      3ewKNTl2NCUAVdHQqkXWkmmCbjsydvL5PA5bjdu3HtA31seDW7fx+4IAWGo1dIsFm80G8PjT
      xOS40LaRYE3TTAGYHDtMXyCTU8Wfv3ebv3jvtqG0f/Nff8MUgMnposOaYUKcM5y+oQDe/d6f
      sqx1IVh0fuvXf+VAMmdicth8WfqCFwN/ZjD1f2g8DvD6W98m5LIRCgQOKGsmJsePhgLQlCqK
      qiHY7Y2SmJiceBoKQJeLZPLtD5RrYtJOGrYBrI4AnUGnOXhlciTcmlnjP/3pPxlK+5//9etc
      GW4tKmBDAdgkN1euXOHhzKOWTmxyulhNF/mnz2YNpX39xhBdQfe+rtdhy/Brrp8YTHsDOGAB
      1LQq3//r/033+HMtndjkdFHMJLn5k7cNpX1x+LuwTwFErFl+zW1MAE7r77V8nYYCUDJLPPuN
      36S69qDlk5ucHvqFVf7QYPeiU3gd6D/cDB0QDQXgjE6w9uP/SfTiq0926jKTk7NY7E6satH0
      BjU58TQUQGVtksD4a2RXZ+HKaH2n1Y5LspKpKjhF0xv0pPJXP75vKN2lgQgXByMA6Pr2RU4a
      oesaqlpfyyGeKfGjm/OG7L56tZ+OgGtf19N13bCdqqqNBfDhzSkyJQ2n/0njQpfLFCo6qqpS
      rpRNb9ATitG6fMdXX+GZ0XpgLdVq/N5ZrTYEof5olfOZptoOQsS3r+tpTYTeEQShsQBevH6R
      7/3oDi7LpgvZnVy4cH5bWq/XS+/69kbNb2Swd1s6k+OB0bq8XfICr+6ZbjeOe9uh8TiA3YlF
      rbYzLyYm+0aOB8nfHTaU1ssuAvjw458T9LvNaG4mJwpdtqPmPYbTNxTAl9/4xQPJkInJcaah
      ANRSind//DHuQITXvvRsO/NkYpA//JN/4vbs2p7pfuONy3z3jcv7upZeFSkvdhlK66iK+7pW
      O2k8EqwUyBRV3KY39LHltz0/IO+/tWe6XsdvAvsUgGynsmRMALq8fw9iNe8m/eEzhtKKv+Bu
      eWZX4xKgUqZ7cIShHlMBh83McppiRdkznVsSGe4JPv4+IKyi2fee/WS3ZfeVv9NMQwEI7iDV
      xKe8c7fIv/2d77QzT2eOH/7j3zPzaGHPdMOD5/j93/vNfV9PyRnz0xEOoCpT06yGrydp7e9w
      aVxy6CrJvMZLN0xXBqO89+msYY/J//JvXn+8/dued9ECH+9pY/M8D+xfAIV7I4bS2S6FcO7z
      WlrJafh6rpKTdrceGgrg7oOHSDaZxViCq/urPp4ZLpQ/wJv6XwZTv753EpNDp6EALl64gOYq
      cOPS1kGF1eV5JF8HVrWEjJ1wwEtNU1hYXqP/XC9LC/N09pwjtjCDzemnpyty6D/iuBCxZfEZ
      qJObHB8a9wJhY+HhLZKJVd78ypfqO3UZhyfM0vzs4wGycOACM9PTdER83PrsFuHBAaanZ5Ac
      AqnV5TMlgHZTjQdRDHRNWnNuHG3Iz0lk194jm81GPB5/ssNiI7bwgIGRC8SWNnn4WUW8Xjel
      wgL9Xi/lVJx4bAnB7kWt1bCcEW/QZj0RNzD6v9RqtS121XgA2UDXpJh14dhkZxRd1594WWrG
      f5uuHaHdQXmDbuD1PhlW1uUiFd1GJpPB5bBRxUE+n6enK8SdqRVuvHKD6Qd36Do3gq5WUG1O
      BIsFTpg36K2ZNUMDTMCWAaZmPRE3yCdCht7koiOEe5OdxWLZJfUTrFbrlusZZbOdajP+26y2
      o7NrxnVnV29QwS5gsVhxuZ8IwOrwce3xBJeOLekvX6z3T1+4WH8gghcuGc7IcSO0/C4jnxhs
      zL7xxNVXzbkNj5Z6N23LiSBVA2/ymj+4ZxqT5mgoALmYRrFIaPmzN4jSamNWzXsMj5aaHA8a
      CmA+UeFbb76KzXZy/DqeptWqjMnZoaEAPv3ZT5ifX8TuDh6YM9xqbIV3/+EfDKV985vfpCva
      DUChLDO7kjFkN9QdwOOs+6KMr/5vBr/4Y2OZe8NYRGGT00VDAfzqv/odJEk60IuFlUV+Jf3f
      DaV1KpeBugD0+H3Kf/UfDdnp3/1v0G/MiaoRzU6qMDm5NBTAxsN/585tLl062uqBy1JlwmCd
      3GnZ/yy2ZidVmBwflqKd3L1m7HntZxcBaJUs//DuP6NTwxPqZqA7fFB5NDHZk6rdzlLUWLQ3
      v93ORl1lKdrJx9euGLL7Drv1AmVXCA5dRU3NEl+cPhABtNsz0KzKnFwSoQB//c03DKXtDAXw
      t3idxrFB3R3EPvhnrr/wJSL+/YW526BVz0CtJBl+kO0l6fGPMqsyJnvRUAB2T4i+oJ3/+7d/
      z7//d7/bxixtp6bZDD/INe1kjDafNJainfyP3/2uobS/H+1k4zXXalWmXTQUQLWQwhUd4xud
      W9+8xWwOye+jlEma3qAnlI8MNhIvRjtbrlps0K6qzAZVeYVs8TODqX+5sQC+/3ffR6/mGHnt
      tzbt1Xjw81uMf+UVlmJ1JznTG/TkYbSR6I92ctKmQ1WVGLni54bTNxTAS196mZs3P2dlbgqG
      X1zfa6N7vTgTxU0jxAa9QY+7Z+Djc7TZrlVvUKN2m706m+EovUFVtUJFXjFkp6qVg/cG7R0c
      o3dwbOtOrUqiXKS8FGvJG9R6zD0DH5+jRbuCz2u4vtu/yS4ZDpEzYOcLh4husvubX/w6My9e
      39Pu66PjvLlPb9AaJcNVixpXEIT672n1nmt6hnjmHUN2mv4ygtD3OM9G2dUbdEdsDq5cu7bj
      odPkDdoq90eH+KHB+u6XNm3/9IUbzIwO7GkzHApzEP+q4Ter1rNpu2C4aqFq3368rWkFw8LR
      tCtAe6vM5kLZO5DzuI2/yQ85L4eB0TdrqeID9ucH1qpw2oUpgB1o9U2uagXDb9fNFMtTZIuP
      9k7nHARefvx9Lf0OC2t7O/Hlun8D2B7V+zTyol+jr182nL6tAmi1LznvcRvuuvuKx/24L/mj
      a5f5ocdYlLI/MpRqd0qVKcNvV/j9x1vFyhS54t4PctGzd/Csw6JP0vkDgw9Wn2S8IdqIsFjj
      rYixhntYrG3ZdrmMT71tqwAUJcVa2thiCYpyno36YMYl8s8XjdUNr7rEx3PVWn0j54qfs7D2
      FwZT/3LT5z9qjD7Ivf4nq7Q4rTBm8MFybmqHtiqckFjjrYixVWK8YutzzdsqAL0mU1VihtNu
      oKgpw29WRX0ZqDfeWn0jt5tvd6nkHXs/JN7A1jfiH/TLqMG9vV+dT71JDT/I+3iwHp+jReG0
      i7YKoNW3QavFYUisMeZqvjhu1e6tiMrXLjTvjt3n0FENPCSCY/9VC5OttCyAfAuuEK2+DVot
      Dl/ya1ztb77e3Kqdycmj5UJnKVYf7QWYmZ4m4LZw67NbWNwBpqdn0CwC8dXlA8uoiclh0LIA
      RFF84g7x2BWihNvrRbRCPLaErlkwvtiliUn7abkKZNQVwnRONjnOtCyA7r7BLd8buUJsWSjb
      4sTqNjaYX7M40TTt8XZLdkLEsN2GzVHYWaRBrAacuCzSYEt2NSGyxc7wf7nJru33rk333FJr
      U8BOTdOaDo3Yio1pd7Lt2p3HtglgJ+RSjtnFVSw1nb6hUVz25n5AJbtK1dGF3+A0otXlBSo1
      kW6fQNURwWtwKavV5QUqVYVsUebSpQvYjIXkZHFuhmIujebu5uJwz94G62SzGTLJOLrgYqjf
      +ILjmUyGdHINyRuhuzNkyGZtZRHVKjU9b6OcSzG7lsGulOgYGMfvMvZnKpUCD2dmkVUbE5cm
      sBv8M9OJVZKZHBoC46NDGLwFj2n0rBzpIsALi4v0DQwx0NfJ4oLxEdvbP/+UyakpJu/dodSE
      m3smX8QrqExPT1Ew7i5CplCiWC5zzmchVTFuV61WsOgyvnBz4RInH9ynJGvIpXxTdouLCyha
      jUTcWDQ8gGyhiE+yMjk5SSZfMn6t5Rg+SxEx2ENsyXhv36NHC4yeH0NyWJmdNh5+cjm2xvDI
      KG6tQLaJe7fXs3KkAhgZO8/Nn/2En92cZmykz7Dd+PgYYCHSf4FwE2v4nOuJks5XsLnChJq0
      c9gdZGoeIk3YRaPdZIsyQq25MYWx4QFUVccfNuaRukFfZ5CHD2cYHR83bNPT00s6ncXu9OD3
      ugzbjY6NsJQoszT9gOGRvV25H9uNDvP+//spVruTwaFzhu0unB9jdnoai9uPo4nX/8SlKwyP
      jHH+4mXcO0T5PFIBTE894OpLr/HS1RGmpvdeJG6DqZk5RkdH0PJJSk30s87OLTA0MoKzVqXc
      jN2jeYZGRhAqqabePjNzizz/8mvEF6aMGwELKwmuXJ54PM5i2G41zVtvfZPpyfuGbWJL84S6
      z9EdcjZ1D2amp7l87QbPXrvA7OyicbuZaZ7/8lfp7/QxN99EyTE7i16rkVx8SKaJwfZHs9PM
      Tk/x4O5tiju8h45NG+Dc0ChOg22AjfqgbhEZGxk0XB9st93ywizFiork9nGux3g1aL92wUiU
      SNBYpKNW70G77QrZDA5vgFophWwPYdDJd0+7Iy0Bksnk+pZOIplqwi4BQDmb2FHVx8Uusf77
      komEcaODsEsat2v9HrTXLhZbYm5minuTMzTTAt7L7kgF4HQ+qVC7nMbrn871tILdRTMdR+22
      2/hNTpfx33YQds39l63eg3bbHc69O1IByIqCosj0j5ynXDD+NlAUGUW3MtztJd9EfbDddrIs
      Y3d6cEvNjTfu185SM95QafUetNvusO7dkQpAqcoMj40xe/8u2YLxLjhVtzLUHeLOvQfITTRm
      220nSm5cNpXpOeONxIOwi8WTeydep9V70G67w7p3R9oINjE5ao60BDAxOWpMAZicaUwBmJxp
      TAGYnGlMAZicaUwBmJxpTAGYnGlMAZicaUwBmJxp9i2AlZXmY28aYWpycp9nUJmcmjmQvJic
      XrYIYPbT97gba2LO3wHz/tvvkFnfnppqbhLJdlSmpmb3myWTU84Wd8P5+XmSKRc+xpm98zEO
      b5hkrsTXLnfw3jR865WLvP3O2wRqFtYsZTy+AZTsKt1vvcH3/vL79A/3M3bpOu/+zZ8zduEK
      t+/c4dKlizxaWuNXf+mbQI133/k7Ah1d5Csw5CqQCj3Ls90V3nl/gez8LOqnn3JxeJx0Isan
      n3zMUjzHN16+xA/e/4IOnx13xzCTtz7hO9/5Ne6+/zbOS9/ig7/+UyaeucHsQoxf+cZLfP8H
      /8K5/giyGUrTZA+2lAD9/f1cuHKdvmiYXFXjhReeR5ILbPfZq3Dpua/z5qvP1b9aBLxeJ5pu
      QbLbcPnDXLt+nWAoyPXrN7Bb193wqnEUsZvnn3+RSu7pSRtW+vuHuPrss3QEvQQjUZ597nls
      tQr3PvuM5776Jl969assPNweRz/Y0c2NGzeQBHjw6Ydc/co3efb6VexmC8dkD7Y8Ir5ggFQ8
      jqZp6HKViiyTVTR8TjdqucTa8jwVFUCis3PTiq5ylbGrzzPR5+SDzx42vpo9SDW3jFwtodSs
      uN1uSqUii/Pz6EAw4CCeKKBpGrJcRamWqCowMDLI/dv3SK/M4gp143ZYKVYVFha2z5nt7j/H
      w3v3yCTWqJolgMkebHOHnp28iztyjrBH4PbdSUYnLuJ2iMxN30fwdCIJNQTAHQ4jUJ/iFg6H
      WVmYJVXSuXh+hNT6vuRTnwDVUo57U3NcvHQJu2Bh6u5tAtEerBY74YCb+3du0z04TjW3xnI8
      u57OSmJlgURR48LoILpS4dadB/T1deMKdFLKbr1ObPER5ZqIz+UiHA4ewd9qclIw5wOYnGnM
      WrLJmcYUgMmZxhSAyZlmW9iB+49WyZeObjCsEX6/G1ls32oDPoeITmvNI8lmQ9abWxrEYbMh
      a83bVJu1EWxUVeM2HS4nknB6l5Pe9sv+6M/e5ZN780eRl1157cuXWQl52na9F/siVJsIL7KZ
      Ab+X1VKxKZtzXg9LheZtFvOF5mx8zdn8+vlRzvmMRZk7iZhVIJMzTUMBRINewr4nkbu8LgdO
      x+bwulbCPgcDvZ1c7A9vObY13cGi5ZOs3b1Du8a4skuzzN6+u+OxSrG5t68haipzn39KPru1
      NKgUmguVbmKMhpW7aMhLSZY519OBoFUp1AQmol4KFgk1n0PDQioVR7fbsagK33hxgocraSai
      XhSLwGq2zIDPStHm4qf/cpPMAQ3LavkcmtVKfvY+FpuNldsP6LowhKbboZqlVtPJruUYef3r
      B3K9UjZDNVshvrCIjRrx6TsEevpJ5xQ6u4M8+uCHeKLnyOer9F55AZ93n/XlmopcVSjGlli5
      n8AT9DP/cJWxK6Ms3buJq3OI7gHji2aY7E7Du6XZBDq8VuYTGXTALgqsZkWqepVUtshA2E2p
      qgIqYYeVhXgeh7VGPFMgr9rQNZk7mSqSH8I+iUzceBSw3bA43EQuDKEk46CU8ESj2AMdULNQ
      Xs1hFT0EhzoO5FoA7kgPDneRSjFLJl/FF4kgaxb0ShEI4gh0YrOq9FycoKYegMhrFgSHnVI6
      iW6xoqgWQh311V7CA6NQa3ZtFJPdaCiAW5PbG8KzS09C7j0JCV9kd6/75iIc74W4vmiEGK4/
      5K7ok8UZXOGDe/A38HXuHp481Nt/sBe0ORi6fgO1UsEqSWYj7ZBpKIDnr46Rj8eJF2SSuRIO
      SWKkw8XdhRTPjPaQLatIyDxYyvHs5QGWlxOM9keYXU7T1xXg5t1HTS1CYZRqOkZq5hH+4Qu4
      ggEAco/uY3EGUNKrOKNDSB6BxOQszpCHYiKL0yehqgKh4eGDz9AhIUgGFz4z2RcNBZAuFFle
      zjAw3MtQb4T5pVVkrPT1dhKQbGiqRs0igaVEh08i7Ovlo4+X+NrL3STKNjw2DkUAjmAUZ6iI
      XslTXE5TKWtQziFKAUSnHaVcRk1nAAVH+ByarCEXUvU2gonJUzQsYcvlKhpQqtZXhHC6XIz0
      RvDarXj9HkTBjmSt4fW5qJQrLMcLPHu1m9nFHHJFAeHwCm9BcmKzOx5/Fz1+tHIeuaSAXkHw
      BUFXkVNrOCLnsNkdWFpYQtPk9NOwBFhartf355bWmFt3u5+LpQG4NxvbkvZHn9cnMm6fqnI4
      eLqfLDnqbpDGuWmBOWn0yiHnyOSk0lAAl8f7qRZyVBDJp9NkyvU1Ji8MdbOWKjDcE+TewwU0
      mwPJomGRXDhRCHVEWF5cIVVqbmVEo1TTMXIrMfyDY5QSSQL99UZoJbmCqotY9TI2byeiTSE5
      /RBv7yCVTAanT6KUqxIcML6iocnpp6EAKprKckJlotdC50APSg3yZY2xqBe9lCNbllHUGk4H
      dAX8jAz1cvP2FP0dAUS1QmrG+Fq1zeAIRhEzRYori7h8dhLTj6hVi3i6QpTWVqlVUtTEBNFn
      ruPrjFCMr1FNrKFW/cj5Cv6BAbNnxeQxuz8Lav2NbrfU+7fF9Xq95HAgWXUkpwO3x8P5vhDp
      fInRcxFqFnAd4kjwBjZbjexSDMFRr9urlTJqpYSrM4ro9qKUClRKMnaHhZpeRVOhVqm06N5m
      clppWAI8nK6v4fruR1vDk0w+1emfK1X529jmvv7Dd6QLDI0A4Htqv7d3azenv7/uPOc5N3bo
      eTI5mZi1AZMzjSkAkzONKQCTM40pAJMzzYmZ6+YSBS51BNp2vX6/G7nm2DvhDkTdTuy25rw2
      O91OrJbmbDpczr0T7dPGIZzuEfQTI4CSojKdyOyd8IDwuwRsQmvOTKnqE9fv82EfseLeUx2r
      uo2iVjZ0/qjbzWqpxFxh97nbUZd7S14Alktbl0vvdLlZ22X6Zu2UdxybVSCTM82JFIBare6d
      6ICQKxUqxeIpfw+eXU5MFWgz5VScWqWA6PGSiyXw9fZSSmWwS6Dp9sf+QQdB/OE9qjhxO3SQ
      glSSq7hCXhDclONLRMau4nKdyL/RhBMoADmzRiVXpDjzcxyhAIotTHbmIfFHjxh89RVsBzxl
      0O4NoeWyZJNZrE4dr8/L3Ecf4IgOEJ+8jaz7GXhmlDaGLDI5QE6cAOyBTjoCnXScPw9ylip+
      HHaIPvfSoVyvYwfv0a7huisGr75GMZ3mlHeUnGpOXBugmo4Rv/NzqsUy2OsPv5JLoGpQSdfn
      MNR0hcyjWXS5TLVQpLgyRy622tL1CvFllmcXGh53B4OY09RPLieuBNhwh1ZyCdSsSqWs4fMo
      lK0RlFQcKRimsrZMZW0BIdBBrZymmoqj6XZ80d0nuO9EuaSgFfNk12wUCipafg1XdIhIV/gQ
      fp1JuzlxAtiJcipJMbeAvrZI0etHLVWp1VTkbIrCyjwur4RabS3eqZxPkUkWyCzPklfdBNwa
      FpefisuN5DUnrp90TqQANtyhYWNK5GjdNXrsXH1nZzf+4XEAQgP76xHqvXydzWGoitkMbn/7
      RqRNDpcT1wY4asyH/3SxrQS4OH4Om/P4Fe293WFW5CrVdIyVzz7H1z+AWshij/Sh5HI4wx5y
      S3FsliqCv4vwcC9L73+E1BlByeUQvB7KySy9L79qqt7kMdsE8GAhzieTizulPVKkoBu8DhzB
      KIHhcWq6ir8vSj5X99exCiKCJOEKBMmtZagpXQhuB1bBhVqYw+r2INodhkd0JZuNqLd5ZzOT
      k8WJbAN4oj1YbTVysQSRkXodvxxfxNURBSVHx8QzqGoZhy+IJxrBJl3D4bRSylYw2mUvazqx
      JmP878Rzvs69EwEhybjYwpITi4HO15AkIezhlRp07F7ai9bTXV42FMCzFwZQykWWcgo2tYrk
      ktB1Kx7JRjKdp6szwHwsQ2/IzXw8R40nQbQOPdPO+sOy2eXB2dG3vhVZ/xQJjNRnDftc9QUe
      HEewYmpJrZJT9u6B2pym2+0mUdk5mHCH5GKp1NgrtkNyPbZdfmqln4jTte28BbVMRNq+fwOt
      droXW25cAmgqXSE/vVEH8UQWm02lUNGxWW0EO7voj/q40OHgfqxEf3cIm6Zxe+FgA+GamBw2
      DQXwYCVDn08kUanhRCNRKMPjYteKRa2QTGcoVjU6uiKU4qn25NjE5ABpKIBCocj9XRZAeTD/
      xLVgfiHWOKGJyTGmoQB+4ZVnWJqeQ5WceOwC8ytJ3nxhjE+nEwwE7Pzjzx/xlevjVMolLKIT
      taZxTqoxvZLii6VsO3+DiUnLNBTA9NIay7Es/YP1BufAuU6sNYg4Lazl6xNSZmNpLnV7mEtm
      uZvS6B1xIh/SzBGvQ+T5nvb53/T4nCSqh7AGmMmxonF06FiKKjC3nKAs1wPj3p2xI+sWev12
      vC4HUOP9O/NoFhsoOoslifl47lAyWlFVEpnDOfdOBJyCOU5+BmgogHKlvkbuxsMPUFzf9yhe
      LwHyjydY1wejPp1cOow8nmgCe/Szmxwtu7cBZleIRr0UChVKNSvFQoneni48tQplBG7dnuLc
      YD+VYp5otJNCOk2ko4N0KsnPpg6nYVxNrpBYWkV0OBDdPuwuO3q5gM0bpriyTHj8AtZj5KCf
      qVaIl5tbIDDqbrTqgclBs3sbIFHCLspgrw8kKXKVZCLJv6xkef358zhsFvLlKuNdAe7FMox3
      OKlRoyofwtpI6yiVMsHhcUqrS6ArVLJFwIZ1bZbC6jL4+ujo3v+K8g6bjZC7tVsjy50AAAl/
      SURBVLhA+2W3UsO/R4my23G/fedjjfYDiNbTPd1t9zaALBOvhsmvxshU6lUhd1EGLDyanSdn
      sVPKlbhdKmB1uPjpnQUG+7uJHWL8Hk/vEKmZSbw9A9isUNN1LFYrUKNmc+INHUyVQ9Y1lov7
      jz7hk56OYb03BaVKVt4eIygsuZjLp3fcn1wfyc1sstu8HyC9fiwsubbEC8ps3v/UiLBWO7yX
      2XFgzzbAQiy5ZX+xUnd3eLAsr++pUr8ldb+ZO9OH3Q6wEBo+v+OR0ND4IV/b5LRx4pzhyqkV
      5j/+lPD5K9gFjXJZw25TKRbr0xU7Lr2AKGgsfvIR3sFx0nOP8AZdVMow+MILR519k2PGievo
      c4a6iYxeQBSfZN0m2hElEdHpJh+PYxXtuDxupECIyOgEAILjaOrzJsebE1cCAPh6erFYLQgO
      CR+QnZ/C09GLbLPg6Y4il2Usvk4ku4jL76NIGbXFQLcmp5sTKQDRudV33t9fXwLJHTi/ftyF
      c9PURW/PYNvy9jRBSaLJoM8mbeRECuAkka1WSDQ5DtDj2X83rokxTlwbwMTkIDFLgGOI3+7Y
      ccKjSxCxSC5EqxVl00wtlyBit3pRNvXZixYbos2K1eICQLDYUNePOwURq8WFaLWh6PV9otWG
      aLVilVwIVhvqpv2nGVMAx5C8UiUtb682pdeHXsKSa8tAWVYuE3Js3RdyuIiVClu+bxzf+AxJ
      LnJKfTvocBErF9e3nWTXp2iq+lmdEnnGcdhsRDxmz9Fp58QIwGMXGYuG2na9kNPOSjG/7/N4
      Hc27Qpi0jxMjgLKiMp1u33wAl/1g+gcCDieY8aOPLSdGACeVrFxpGHKkEROh3Uu6094wbSfb
      BHD+XMdR5GNPeiI+lgBy88xO5XB2BrGWM7gcNmT/AF4JxCaCSx1ncrJMqtp4xciw5Gpjbk43
      2wQwXarwRb65N1Y7CFcVsIsAOJxuvD1hVj+4R1624B6TiK3InJs4G96grvVuzM14RceWEWef
      6Hg8MUgSRFRdfywcpyBSVhVEq41et3/Tto+yquC1S48rbcJZjQx3bHF10jFiIR9L4usbwBMI
      o+oKiv3szKIqq8oWv/8NNu+zWJ74/wctkK5uPbaRNuhwbtvefFw9q5Hh3HYRvVajrKgNUlhw
      ilZqWBCsFgo7hEWURIFKQ/sWESREAUK9PQd7XpMzSUMBDHf4KSsqFpuATZexiBJjISc3Y3lq
      skxHKEC5mMHh9qNXihSVGl6Pm0Q2T3fIRzKbYyIa5GYsj8eqI0hO3IKFubUUK/nWZ1qVkitM
      f/gJnRNXcAgapZKGQ1ApFCoo6RTegXG6Bnu59YN/ZOjaMyw9nMPjESiVYeylF1u+bqvsNt2w
      ET777uMPPrtjm4OdT5R2LBVMdqehAJxOiYhbYyFTRsGKVNPJyzrPj/aRyOSw6wqLRcgVSgRd
      dpwWnXyxRDAcwCnaudKhIddqdHpdeG06C9kyJcDtdMI+BOAKdxMdm0AQrbA+tG8THQgOBVWU
      qFEj8+gBqqqiqLX1hrGC2OR8ALvVRti5f6e0rNz8pHi7zbplyuLTWC3s+LAHHU86AbyitOP2
      bsc2tjfvEy1ntA3w0cPtawTcAaDxiokA1lSRG/1hPpmLUTyk6aT+3l4sNguiQyIApOem8EeH
      kezLeDrD1IReLkUHUYtZfF1RREsVpcn5ALKuEyu2tq7YZlqZE9wqmU31/Ey1TMjhJF0tYwWy
      1TLBTd83BGRZ3w7anSwU01s+03L57LYBLp7rQi4XWcpWKCsqgiAy0eVhKlGi1ysynSjQHfLj
      qClY7E7WMjnOR4PcW4zzyczhxgq1u7Z2dwYH6vMBPIHNc4UF7E4XZoehyW40FEBV11hOFOjv
      ieC221hNF/AH/DwrinicdQGMdwW5O7eCaJHp7Y7S61QpBF1MJva/sMRxIbM8TzpbZWhibNux
      QiaDJ9D+NcPq3aBb93lF6VjFQzopGO4GlRwigs2GwyHgEAU8kp3lTIGJ3g4iAYn353PgEpDE
      0zVKKVcr1LCQWJgmm61gLee5+8UM175yg0Qsi5qawxmKUtWtDF57iaBv/z3LezWCFV3f0q25
      wdPtgn5PfUUQz3qd/unP3Y5tfApntQ0wvVRf7OLB8pNFL6bXtsb7mVpJMLXp+9+1thi7IZyC
      QFeoffXpkNPBallGEO3I6RxFWUWw2RA7ooxec1PTNSS3G5vUjz/oxRbqpqYeTH05J1d3bQR3
      GBwJLigV0nKZ9KY6/gYb+wpKZYtwFotpApv2n9k2wHGjomnMZtsXrdllr/81ob5BQn1PHRw0
      fp5AC92ge+EUxG3doF7RnHvcCg0F8PUb46wsJuiKuCgUq5Swki8pjEWc3E5VeMZr40fTawT8
      XjokG4pVJGwHr89PNpvhwzlzuSSAjHzwc4KNjATDkyoQ7Fzt8YoSak1DsNpw2sQt2xuc9ipQ
      w183u5piJlUmnc6irCez2UU8oo1xvwPF6SVsh7VMHlkHXde5tZQEalSUwwunV1MrLNz8HLlB
      /NFqNsvpDuZnnM1VoKe3M3KZvFJhpZRD1bVt2/mzXgVaimeRVYW4EqCQSpCp1h+rmhpiNZVj
      qMNLwSLSHXLhFC2Ua1Y6vU4W0wVi6f1PJGlEen6J7meuk5/5ggfzOSIRJxZngLUv3idy6RXy
      S/OEBsLE5nNc+dqrh5aPw2SvRrB3h5HgnapAO731N9Lu9Pn0Npz+EqChACpy3bdn8alAt7Or
      9cXw7izXG1T5SpaVzQlSh9sF6usMsXjzM+yiiC8UwNPVCVoez7kR1GIJ0eVC0234QvvrnnTY
      rEScR+Ngt1cj2NZgJPjpfRaeOMTx1PZG2qdtNt78AXt9rOXMlgDHFcETZPDa0wv+duLtHjnQ
      69RHgvfvWzNqb1/P1WZXiKeRBJGNf23jLe8UxDPvP3TiBFBKrrAyOU1k/BL+cP2WZufuYY9O
      kJ+9hbt3BIegkUlkcbntKLoNNRenqgj0nB9te37b2Qu0uZsTtjaCBYsN2OqxK1hsBOxOvKJE
      XqnsWCU6s1Wg44or3I03UkAr58kspCiWNHq73aSqRVILcRyRPtzeIFZrGleok9TSPOVcFkU/
      mggPh9ILpO3QC7RDF+hGw3eDp6tAwi5TKwWr9dSHRIETKACoxwYVHCLa+loFyYUlCiJ4O30o
      xSwFi0ZiZpqaqpFcieHzO9GUk/MmaxQYa4NGc4KfrgLt1Qh22kTy+s59ZpJNpKDvf4GQ487/
      B8gKnOSxlvUXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2deWxkyX3fP329vi/2weZ9Dec+9tLuSpZW8q4ES5ZsA1IcyYjtyHYixI4B
      J0AgGHGQCIhjBEkQ5HAUwLEjJLJhwzLsVaQ9tIdWq92d5VwczgxvzvA+utn33f26+738wdkZ
      cmdm+zXJ4TFdn3/Y77F+r6r71bdeVb1f/UqnqqqKQNCk6Pe7AALBfiIEIGhqhAAETY0QgKCp
      MW4+GB16gx8NTWIz6/F1HuPv/8IL/If/8J/45jf/xbYziC7f5MWXXmYhpucP/+B3d1xggWA3
      2SKAt37yPr/+e79PwGoC4NqFtxkbG+VP/uRP+OyXfpnC8jV+cnkCo2TjH37915l474fUPP1c
      fu8SvZ1mjj77iwwE7fzFd7/L137t1zAAVleQ3/zGr/NH//b/7sf3Ewg+ki1doK/9g6/ynf/6
      H/lv3/5TwvEM5575NKdOneYb3/gG/SGJv3vtMv/0d36bLzzVxV+/9C7J6BrvDs/wjd/+Os8+
      doof/OBVqrkw4YyC4fY1HS4XBt0+fDOBQANbBBDoOso3f/9f8vWvfpH/8cff3pqylMZg96ED
      2jo6iMViADz3mc9g0IG3+yxyeIJ33nqTT33u83tVfoFgR2wRwOs/+B5v/ORdro5cpSXYDoBZ
      KfDu+xeIlp04q8u89c55/tf/+Rte+MzH77nY5z95mv/9o0mePNp659zq4ixXrlwjFgtz5co1
      qg/5CwkEjaDb/CZYqVWYmphAlRycGOxHpwO5mGNscobBE6exSzrGR0fxdfQR8rlJRlcxOoI4
      rRtDiezaOH/x5hz/5Fe/eCeD1cVZ1qLJ20dGzj15buvAQyDYR3S75QqRXJ3lz//2NX71N38L
      r820G5cUCB46uyYAgeAwIl6ECZoaIQBBUyMEIGhqHukJmUwmQzab3e9iCA4wj7QAqtUqxWJx
      v4shOMCILpCgqWkaAdwYvsCFC5cpK/f/fzqdeqBtMZPd8ga7kM9ryjNfeHC6D64hFzJcG5vk
      w3PRSjlPUctrc6VMvlgFtcbU1M26+d2PbKZ+N1HrdwagWiSVL2tPf9eQ/Dbs8vnCNvLawPCt
      b33rW9u2PuAUi8U7XaBWr4FI3oVJjjI6s4hep+A0VZlfi3JzLoxJ0lNKx5lZDCNn4oxNTBNe
      XcIT6iJyfRzVbWB4ZAK90czl82+gGJ0kI4usRLNUqmVK2RyJTILp8XFsHi/Xh4dZT+XpDLi4
      eGkYo83G+PAV8lU9qcgCw9dnGDzSx9DQJU4OdnBjehZdRSKXifDD//ciHkuNockwDruN2clr
      FGpGivksuXSOWGSZiZuLeOwmRq6eJ6sLkrv1U6ZzTpTUMtFsGTmzTjxbxSkpXLxyjVQ+R3Rl
      EVmpUSjpyGcSLM7NkJN1rM4tUiwkWAynkLNxxmfmcTvMjIzcwONxMjx8nVS+QMBt4cLlqxj1
      Om6MTiKpeoxuK9HVZcaujlGqVnj5pR/S3haiUKsxNTGNXqcwPnkTSV9hcnaF9lCApblp5lZi
      6KsFVtZTRJZnyck6vG6F137wPkanndjKLIlcgTde+iFGqcKrPxyhrcPO6PhNTJKOleU17JKO
      v/re36CgY215AbPdzei1kS2/tc/r+sg60jQCoJpjLQn5XJQ+h8LQUo7jPh3XZldwtR8lF57H
      ZjWTzJXQY6Cih3OddiJqEOJhDNYy1tBj5GILeL0+8oUcpaqCWi2RyuWpZnOkVZWnjrfx9pvj
      PP6Zn6GUSeAw6FhOpEkkInhdHahKjlJNwe924w8GiEQi9Pb3sbw8TTFtIVdM4G/10RtwYu18
      jPjEW9Q8pyhlV8hl8uTTORSTiRaTxFIqzdNn+onlTLTa8ji7T5NPxKiWimSKRU4dP8r45DTn
      nnyC5K2LjIbB5XCQjd0iVy4yObaC1WVDV6lSVBQUpQyqkYEWlVeHZ/FYYHoxyac+9QyZRJT1
      SIIzTz7F3MwsT50M8tqr43Sf62J5ehKHqx+1msfr9TAQlJhYz6IzeIksjEO1hN7moZAr0N4R
      Ynl+lum5WfSqkdMnQ7z9k1GsLhttrU5qaguF3DLTk1MYrR78wRbOnjlCrexgZXkKqiVi2TKn
      zpzGYrVRrVWx2ew89lgfk5fmKBlqW35rfyD4kXWkeQQAoJdwSQqziSqP9QcYu7lIe2c3AX8A
      ixGMekgXZDpCrdjsNlwOB3qzHYsRrC4H0u3PsbUlvMFuzGoJxejAZzOyGs/S09OJ02bD0eJl
      ZnwUrz+Ix2FmPZ6htTVEi9uDzW5BzqfJVw20hwIYFJkb41OcfuxZoqtTmF0+HJKeqsHB0twU
      PceforA+jTvQhb6cpaCa6GhvxW6z4XFaGJueJ9TehcNixGj1UE6tYXR4aQ8FsNvsuO0mhkfG
      CHSfwFzN4gu1Y6xV6TvxGMgp3L4QXrcDo06mipVyOsp6WeLjp/uJpgqcOd7L6OgE/mA7vV0B
      rgxfo7MjxOj0Kh//+AkmbkwRaOvA43Jjt0so1Tyq5MRmd+HzePB7LGRLCoEWJ5l8ic72EKl4
      DJPVSV9vD3ZnC9XyB+VwcmtqkmD3AC6LAZvbh8MEZdVOOr5M75EeciWFnt5uvE4HANG1ZZy+
      NjwuO6pSI1csbfmtbXb7R9aRR9oVIpFIkEgk9rsYh4p8voDdbtvvYuwZTTMIFmijmSo/POLv
      ATaTT8d47b1hfvGFTzI5v0Z3exCHxUhWVlmcX6LTliLpfZrS8ij9J06yND2Jt72PUi6Gw2oh
      nCgw2BPi+vgkx06cRdKVmby5TE/IQyRTIdjiwC4ZyJYUIpEVWrw+3j3/Hp947gWUUp6aIuO0
      mEmWdDiNFdIVI32drfULLnioNE0XaPjKMCarmVw0TDaTwervwmE1UsilKRcyuJ02coqfY6f7
      Wbo5gUnnoKIWMeqrVKsqJosNfaVKT9DEsmGQ8soox0+fYWzkOjYdpCSFJ0MOrsznCQycoLw+
      j1yRMelVgh2DrC1NEllapWy0093qRHIEOXVsYJ9/IUHTdIFMuirhaIq2tjY8oU6eevwE8VSZ
      vs42bJ4Q7aEAXV2tzIyN4g0EWJ6/idXhweFwEmwN4XG78brtjI5PgQ6CPjcTU7dw2PTE5Boh
      h52RyUXcLg8+jxOXy0kpm8Jg9xHyu3E4nLS1t9HT00OLx0su28C8uuCh0TRPgMaoElvP4g96
      t15vfYXpWys8/szTmJum6Xi0EQIQNDWiHRM0NUIAgqZGCEDQ1DzS7wGMRiNWq3W/iyE4wDzS
      g2CBoB6iCyRoaoQABE2NEICgqRECEDQ1QgCCpkYIQNDUCAEImhohAEFTIwQgaGruK4BiNkle
      fkAEqQcwPDzcWPor96ZfuPE+a7mGLnMP7w8N7ewCgqbivgK4+MaL/OjtCyyH49TkItdGrpEv
      V1DkPPH0xkqmeDxOOh5HrpRYWF6jp6cHgPXVRW6MT1NTVeLxOHMzE0STWWanx4km70Yg6+nt
      YWPhSYzRayPkShXymQQrK8tMzy0BoNRkblwbIZ0vgyITjafv5J1Px4knEly/HVVNVWpM3LjG
      +MzsQ/y5BI8a9xVAd3c3x888TmfIx8svv8Kxkyd4/dVXKScWGBpdAGDowhCjQ+f5yxdfpFxV
      uDA0BGqOd4cmGOwOki9V+fFrL+Ft6+X1H3yPlvZ+zr/z1p08hi4MATm+/7evM3jiBG++/gYA
      NZ2ETQ5z/tocP3r5ZfqPneSd119FLif46dDohu3QBRZGh7ixlKHDkuPdGyu89vIPCPUdw+sQ
      zm8C7dQdA+glMxZJwm3Sc2+cZZUv/NIvc7S3Y+NQZ6e308GVqyPkijI2tw+Pw4rb34rHYcFo
      NNxzhbaubsySGaN+wycvGAzSOXiC5MoCil7CbpHodJuI3ifIc09PL3a7DVmWqelMeB0WzGap
      wZ9A0MzcVwDB7j4mLr/LWjSFy2zg4sVLlCQHHleQ1NIUIyPXKFUBjEjSpkotFyirRoy6KpH1
      5P0u/ZHojGZujg3z5ms/4ezTH8PnMjN08SLLJYl2j4tKaomRkRFypXujxroset6/eJnF1fWG
      8xU0L8IdWtDUiGlQQVMjBCBoaoQABE2NEICgqRECeERIrs0STpWYnp7e76IcKsQs0KOCUuZ7
      f/5d+j/2OeTYLDWTC6epRlG1EJ0f5djHnudoT2i/S3ngEE+ARwW9GVtLiCdOdHDlyghWi4Ub
      U4vMzs6D2SUq/wMQT4BHiHg8js/nI7KyQEExU8mnaAm2olMVfD7ffhfvQLLnAlAUBb1ePHgE
      B4M9r4nigSM4SIimWNDUCAEImhohAEFTIwQgaGqEAARNzbb3B1i8NU1aVtHJeWQknjh3mpX5
      WyQzaVwuP7FMBrfLSyKygIzEzzzz1G6WWyDYFbYlgFJ6ndnVOAaDjvZQgA9W4ZZrOk6fOcb5
      N65x7rOfIDK7sUDdqNejqCqqoqAoipgKFRwYdvQibHl5iXIhh4xEZ1uQSiHDaiROZ083iwvL
      +FrbSYTnqOksnD17Cj1Qq9UwGO5dGywQ7Ad7/iZYCECwF0SSedaT9Tcjf6T3CBM0Lz8enuOv
      3hytm66uAFaXFqgooDeZ6WoXHoWCw8EJ0wJftv20brq6AojNXWVB7YJ8TAhAcGg4YVpgwF5f
      AHXfA5z95M/jqCRo8bfuSsEEgoNEXQGUEsuspkoUivcJzSYQHHLqdoH0khVdtbwXZREI7iFX
      lJlbS2lK29fmwWFtLDRm/VkgnYTLYSGfrz+lJBDsNnNrKf7Vn/5YU9o//EfPc6Y/2ND1NU+D
      lsulhi4seDSZXU3yZy9d1ZT2t774OP3t3h3l12MM8wfu72pMexLYZQEYJSM6nZ5AwN/QhQWP
      JrZKlKORv9GYthPYmQBsujInpAVNaa26xrvqdQUg55NUdBZq2XTDFxc8evj1ab6sYXoRwKr/
      jYdcmp1TVwBmVwipdh1f58Ddk4rM9PQcpZqKvloQ3qCCQ0tdAcyPXcDWdpRsMnz3pF7CZtEj
      l/VYrW7hDXpI+Tff0daS/+zjPXzmsY0tsBSlpvn6ilKjWt3Yy2E+nOY7r1zTZPcbXzhHb8i9
      o/wURdsed3UFUJW8lFdvobe13M1ILpIrKZhMJqgWkZHIZrN4HGZGb9zi5NMnuXVjFF9rO5Zc
      kprODDrdHSc44Qx3MNDal/cXvojRuNEDqOq13zu93oDRuFHFHLW45vwctU6MRt+O8qtpDL1T
      VwBdfgvTkVb62+8KQC9ZOX782L2JnU5aWje2S/Kc9QDQ0dpybzrBgUBrX14ynd5xXgd17FD/
      RZilhUpqnGVdhROD/XtRJoFgx5RWWklfOFs3Xd3nxIWLlzCbzSKam+CRpO4T4FMvfGEvyiHY
      AbOrSfKlSt10Qa+dVq99D0p0eKgrgFJikZffm8Dv9/Pcx5/cizIJGuTPXrrK6Fz93TG/9sJp
      fuWFnfXnawUL2XFtXWGpYNnxiiu1pqeS0SZaS63xXkrd8hn0KoWCcIY7yPyB57vUApfqppNs
      vwPsTABqzUA169CcdqfUClZyEwP1EwK2ghVTg9evPw0qy8jVKmVZbvDSgkZ588oc66n6TodB
      j50XnuzbgxI9+tT3BbI6efrsUWZWYntRnqamMv4i8sJM/XQ9g/DkP99xfsVlbYuc9Bk75h3m
      pZRNmvMzlxttx7dP/S6Q2c7y+gxPndL2GBLAX745qmlBNsD3/+hrdz4/Z7lOzV6/K2Ow7M7i
      pNKKxgqpscvzUSiypDk/RW7Mp38n1BXAjZFhcqkY16dUurq69qJMh54v237KlwLf1pj6a/WT
      CB4adYfNxwf70Zk9nD159O5JtcrM1CQr4Shry/PML68BUMwmGR2fpFKrMDk+SjJbZGZyjKmb
      cw/tCwgEO6HuE0BntGGmyOTM3KaoEHp6erq4tRRB0qtAAYDVSIJTg21cfG+Y4x9/mtjCLKl0
      GkxVVFVFaRJnOK2OWMAd5y3QvnuOqqpb7PLzbVSm609N2vvdGDbZaUVRlLtOZjXt302p7aPd
      bjnD6U1menp6WFqNbMpJZmp2ldMnB5manNx0vkI2m8fmsJHPZqkoEAh1UMhkUJrIGU6rIxZw
      x3kLQNbpNNnodLotdkrRqm1qsmLZYqcVvV5/x65q0P7d9Ib9s9PquVD311AqZRYWFrB77w5g
      FAUkg8JqOEpHKHDHG7R/YICl1XXOPHGGlaVFBgb6CS/N4g6EOIxV/s0rc/x4WFv37d/94+d3
      nF9hoQ15qn5LLtXasO04NwFoWROslCjX9KjZzJ1TepOFY8fu4w0KdHdteIN2dHUD0NV7eGeP
      Pim/wtM5rYPZu7M+ctSr+W2pc9PnWkFbS24oWOumEWhDwxjAjNlowGoTbY5WFFnS/LZUsL/U
      FcArr75GR+8xjJbDe0Ovj1zl+siIprS/+vWDv45VsHvUFUCos4f+/n50+t0LJB1emOZH3/0v
      mtL+3K/9M0I9G1OwkWRec5/8+Sf67ng+Hiu+T19Sa1dGCKCZqFurn37mZ3Y90+2uDvLlxvnS
      dW0V1Hr0O+D92LbK9wFaF1XA1r684PCguVkfGxvl1KmdL40TCPaCiSN9XPh8/Zm5ugKoZNZ4
      8Y3LqJUiVb2VcycO76yO4PCRddi5+Ji2hvfTDjuWTXarofq+R/XfA9Qq6IwSeoMBpbQ7wbH2
      2jNQdGUOLxmHnUuPndGU9nGHnUCD168/DWqy47ToOHn2abpCuxMecbuegdWsnaTGimz6ObvY
      /+khUJYkVkLa4m+6JelOi3xQqe8KYTBh0MH58+/z1S//wl6USXCAibV4ePHzL2hKG2zx4L79
      ebtdmYeNhhdhEm1BH6pp84owldmJKTpPHCe+PE8ZM72dbRSzSW4tRTh2bIBbU1O0dg0QW5lF
      Mdo4dkSsYDpo/J2GQSLAM0f6eHaHeT3srsyHyRdnWE++VDddXQF8+z//e9o62nnyS9/YdFZB
      JyvIQKFco1Fv0IPqGQhbvTP32m673qBa7TZ7dQKaBokAaZv10HmDVqoZypVwHQsNAvjdb/5r
      ZsavMXvjAn2feub2WQMWy8bgtFLZFI5Dozeo/oB6BsJW78y9ttNt0xs07msho6Ff3uly4t2h
      N+h279127VQKpPPDmuxUzmA0Bu+UWQv1u0A6PUdPPc7RzSdrZTIoyCvhR9obdLushIKMa+zv
      dm/6PHmkj6hU/5cKdHezue1+9+knmD3SU9fus0f62OmavkoloalrsZH2GLCziZNqLUcmr21D
      jmrtKw1ff3sTJQZzU3iDbpeVUFBzf/fvbfo8eaSf2Rb3A9N+QH+Lj09vs2yb0dqylmUnsHG/
      FVXW1LX4IO0H7LVwtCJmCj+C7bbke41ciVOS1+qmq9batxxrbVnLlfs3do2wXeE8bPZFAHs9
      l5xx2DXnt7kib7clL8trmltXuDu1nMwOsZ6crmvhNR0FPnHnOJW7QDRVPwpFoeQCmiO638/7
      q/zs8foB3fZFANudS461eDVP3X2lxUvn7c+TR/p4Q2N+H9/0uVrLaWpZP0y5Etbcum6mUk1o
      aiUr1f3br23QpvDHGioWgNOmfQbnQXRaFH6vW9sTodPSeH778wSQwyyt/5nGtH180B8sGMpM
      OFc02RUMd2/SdlvkQmmGaOpljXbfqJ/kIdFpUahqqGwtpq3TpVorstXf+EL6D7Nd4Vj1MGjT
      Ns1r3UYA80M1BtjujMB2W+Tt0mJSGdxG6/d73TJVr4bHtnNri/iVYJWqtX50aKtb+3ZDzcK+
      CGC7rcF2H4eDNoWf30Yrtl27Z901znXXr5CC/WfHAljbQ1eI7T4OB20Knf7GW7/t2gkODzve
      9qVQrlErb3WFGH5vmLbBUyQiq6TSaTKZTJ2rCAT7w44FUKlU7rpDPMAVwm7SI9pRwUFkxwLo
      CAUIhDruuEKk8ipnnjiDmk8xMNCPQa02nSuE4PCw4zGA0+PbcvwgV4jN3qAY/UihX9FYQj/V
      anXDUWybdnr7Kc12tVoNVVX3xc7Y8jx6e/03z3pzcHt29lNb7LSWcbNdo/dgu3Z7dc916h5H
      qlUUpeEdJ7djI+wOt91e5bXnArgfqViYSCKLTq3S0tqN36NtU7RSsUClWqMQX0IfOElA4waI
      87emKNaM9PokCrYufBojDc7dnCKbK1CtqZx47AmsGvt14zeuUi1kqLj7efK4dn/MtbVVUvF1
      FKOdU8cHNdutrq2SjK1jdfnp7+msbwAszE4j13R09vRhlbR3DOKRZVaiSfSKiq+9lza/S5Nd
      Oh5hJRIhkylx7NQ5vE5te9CsLM5RlKuUShWOnjyJpLGuP6iuHIjNf4vFuzuelIradz9ZuDVD
      Kpsnn8tSa0DGVUVPX1sLYxNTyA2Mzms6A75AgI4WO+UG7AKBIKDQ3tmYM3JkdQm92YmhwSmE
      dCJKJBanUtVuJ9dUBo8MEFtdIJUtaLYrForUygUqqo5iUbtdNpvFZLIQaA2QjNXf4fJOfrfz
      UORCQ/fuQXXlQLwJ9vl8ZJYjgJ4Wn1ezXTAUIp7KULMEaW0gcqPP62I5EsMZGiDUiJ3buZEf
      Ekcb2MWnUpGxuFsppSLg0LYKCyAYDJIvVbG4tP8mAG6XC6Nkw9ui3a67PcTUzC10qoLPrH1H
      sGBrK/kKoNQItWpfyBgMBrm1uIZBkens0+5Le+TYKQBK6chGI6QxaMix0+c27Ow6yptq/YF4
      AiwtL9PZ00dPZ5DlJe3OZ6vhdfoHjmCv5Ug34EG713bxVI6jx0+QT2pv6T6wGxw8Qjq+PbvI
      qja/KYDllZVt3YMP7l1vV2vDdt19Aw3nNzpyhemZGaYnxig08JL+QXYHYgyAWuP8T9+mYnLx
      3CeeQtvCQJALKd5+Z4jWnqOcPa4tHPl+2EVXZrl8fZqzTz1LR8CzZ3affuFz2DSsMAO2fQ/2
      2k4uZJhfWcdht+FvbUfr13ugnXoAuDk1puZKFbWUS6hTNxc1243euK7WFEVdnLyuJsva89tr
      u+vXr6uqqtz+u3d2N0bHNNts9x7std1u37sD8QSQCxnmliPoVIWuviNYNco6GYsQT2VQdCYG
      B3o1tyJ7bbe6NLfRl7e76GrXPgbYqZ3XH8Lv1Rbrbrv3YK/tdvveHYgxwNraGhW5iC/UzfLC
      Tc124bU18vkSAUuZcE57fnttt7a2RkXRU8qntBvtgl0yttqYzTbuwV7b7fa9OxACcDpd9B89
      RS6+gkHSvhONy+vnzOmjLK/FNPcF98Outb2bnjYvyWxJu9Eu2Mk1zT3ybd+Dvbbb7Xt3ILpA
      AsF+cSCeAALBfiEEIGhqhAAETY0QgKCpEQIQNDVCAIKmRghA0NQIAQiaGiEAQVNzXwEUs0ny
      cmOh/YaHtcberE86HucDl+2hofd3eDWZ94d2r2yCR4v7CuDiGy/yo7cvsByOU5OLXBu5Rr5c
      QZHzxNN5AOLxOOl4HLlSYmF5jZ6ejR1K1lcXuTE+TU1VicfjzM1MEE1mmZ0eJ5rM3smjXMgw
      cu0GclWhmE2SLVZBkYkn07z813/Fe1euEE1mSUQjjF67Rq64sQIltrbE5M15AKLRKAD5dJxi
      FeLxGLemxogkNgJxpWJrXBsdIxpPPpxfT3Doua8Auru7OX7mcTpDPl5++RWOnTzB66++Sjmx
      wNDoAgBDF4YYHTrPX774IuWqwoWhIVBzvDs0wWD3xlK+H7/2Et62Xl7/wfdoae/n/DtvbWSg
      Vnj5lbc4eXyAV159jfD0MNPhHMgJLgzfpLu7j3NPPknA6ySVTDN44jivvPwSicVxri9labWr
      vPX+Vd5++x0AFkaHCOfg1R9+H3/nAEPv/ITc+izvXV/m1NF+hLeT4EHUHQPoJTMWScJt0nPv
      cnWVL/zSL3O0dyMWEDo7vZ0OrlwdIVeUsbl9eBxW3P5WPA4LRuNtNzw5idnVjmS2YdJ99Mpm
      j8+PWTJjs0gs3Jrn+OkTeNv6KCTuXUbn9Ydw2y0YjUbmpyY5/dRTGCUzRjHSETyA+1aNYHcf
      E5ffZS2awmU2cPHiJUqSA48rSGppipGRa5SqAEakzb6lcoGyasSoqxJZ/4huhzmAqbLGpUsX
      sLj8+EIdzI5dZuTGOArQMxBi6O3zJDIFitkkly5eQHK0cOKJJ7j8k9d5/9236Dpymu5WF+cv
      XmZmdvGeLI6cfoxLP36ZqyPXKe98nwbBI4pwhxY0NaJzIGhqhAAETY0QgKCpEQIQNDUPDI34
      4tvXWY2l97IsmujpDpKzNhCXcId0uGzUtrm9h9sska80tleYyyyRlRvbKNolSWQatHGbJTJl
      7TYn/S24GwiZeFh4oAC+/9PrXJ64d3pxv3nuU6dZa2kgoOcOeabTT3mbO5f3uJ1ECvmGbLqc
      DlZyjdssZxuIEQJ0uRqz6XQ6HkkBiC6QoKmpK4Aj7T66gu47x06bGZ9rcxwXI10BO6cGuzjZ
      7dvyv63pdpdKfJXw+Bh79Y4rdmuCmUtX7ptfKd9Y66sJpcj0+xfIprc+DUq57AMMBNuhbnh0
      h9WMqWrgE48NYqiWKOokutwSqs1NJpFCUqssR6NkCmVaHVY+2dtBJF3keKuDZKlGTq7hN1VR
      nX4unL/EQmp73YkPo5bLqHo9qalr6HSwMjpN28kBaoqEWkqi1lTyWZmB5z+7K/lVyiXkYpHI
      9Aw6VOKzo9iC3cSiGboG2omMDeMMBsnJRjpOfwKfb4fjFL0Zs9VAbGqMFTmDzuImPB9h8OwR
      MpEVbK29dB8d2JXv1szUFUBaruEyqkzNrqACRqOBatlNsZpBLhQI+j3E0yWsbiuFYpGp5Ti1
      isxoPktOMVCryET0Koqp0FA463oYnC0E291Usxl0SolA1YijsxNUHaV1PZgsSH7tkdHq4e7o
      wxWUKRZy5DMygYHjGCwODFYnjhYfypFTWBxWQv52dqVnWaugqHqMkgHZGMAfdGO2unD6fLhb
      Q6A9DrPgI6grgLmlyD3n1hN3H8Nz4ds+P+nw7pVKAwan+/ZfF+Ci1R288z+z82BL1p4AAAgO
      SURBVOSu52dzb4QntxPEv+n8B1sEOlr899jsCIOZvsef2HLKp223I0ED1BXAc8+cIra0Qraq
      srSexmyxcLrLw5VbMT73RA+rKRkzMsO3kjz3RBfryQKdPiexRAaL08n0+AyJ3en1bKGcDBMd
      n8B95CTO1o3IyYmpEUyeEJVkBJO3DZvNQHwxjM3nILMSweq2Uq0YCJzYfYEIDid1n9WrsSTz
      qylcLS389lc+xaDfTLpU5dnHjtDqdWCqypRqOtDrsEkmeto9XB5Zo6/ThclowKB/OI9qszeE
      o70bnSKzfvnHzLz+I/QGA9ViCZNVQqmp5OMJ9BQwOFqxB1qpyWWUmtiyW3CXuk+ARCJLBQiv
      Rvifk3NYbTaeOupnZGyaWbsdq9WKWS3jtBqJZ0qsRpKcPuXn0sQ6HUEPxerDcza1eLzojQYc
      Tz1PEMjMT6GTDMjpCtaADoOrFblQQF8tYu/oprBSplIRM7+Cu9QXwO1ljPHMxu58xUKBd0Zu
      AZAtZ4G744FLYxtTdiu33yAvrzcW175RLN6WLceu3mMbH9rv7sZoPnnu7v+7jz7U8ggOH3UF
      8LFzg2SjUcwuN9lkktlIBgwmnj3ZSTiaoi3kY3L8FpLbg6FaxuJ0UclnaWsPEY2sM7f+cOat
      y8kwidl5XF09FGIJfCdOoddBIbxAuQQGtYjBGcTqlIjfnEJy+JFzWWw+J4VkHv+Jk2IeRVB/
      DJDM5VlMQjUdwe50cvZYN33tAXwOCaMik8nkSMoqkWgSp93GYFcAm0XC77bjcWjcgXobmL0h
      rC0BqqUi/t4WYlO3iI6PYbDZqeSzVEoFcuEl9GYHNk8LOiNU82mKmQyVQh6xCkgAGgRQLJap
      FTN4Qp3oqhuOXUaDSi5fRsFAoVjCZTPTHvLTFXCyEk1jNZvIl+SGNmreDkaLFaNRT3RmBZt3
      Q2xyNoPOYEByOLF4/FQKOTBZMEkGjGYDeoMZg94gBCAANHSBVlbjALx3des+TjMfSpcplFkN
      x+6emG1sb9vt4GhrB8De3rtx3Lpx/OFt4Uy2Dec5a0BMpAu2IqZEBE2NEICgqRECEDQ1QgCC
      pqbuIPigYTMZORX07Fl+3W47Nd32VkJ5zGbMxo23DTaTEVmDG0bAZkXSGMpO0uuRFQW3WcJk
      ePBbDUlvoKJuzdttlpA22ZgMBiofUT6r8dBVFU0cum9VqFS5FX24b5g347YaMRi3N50bLRbu
      fD7mcxEr3Rtc8sPYqnrScqFuOoCQ3U6mXCRT+ejrhmx20uWtm20XCluPg2Y7KfnBG3LX9mzp
      0d4iukCCpuZQC6CczexZXvlUivT6uniB9ohx6LpAm5FzGRLX3sUc6KBUrOHwuIlMTRMY7Kam
      SPiODO5aXqnlOUpYSIeXwOKlFF2jUkqgOjrIzV3jyGe/it//8NZACx4Oh1YAcmqdarmC0eVH
      r+apVs1U5Ar21lYkTwDU3XV1swfaMOULFLMFdEDwyACZsBmLx4VBGSS3tIjLe5zNwbIFB59D
      KwDJE0TyAPRBrYQDC8aHWPk8raEHngv2HKFSLmMSlf/QcWjHAOVkmLUrQxSSKTBsVP7C8hRl
      GZKzUwDU8imiY9cpJqIUEgkyC9Mkbs1uK7/k8iw3r4898P+mRzBoVDNwaJ8AG+7QeZRSlvxq
      klKxhq/VRlYGo9UOQCWXoVbIoHeeRY4vIecy1JTthSsppNKUUkXmh98jvF7B32LC3tpLW0/H
      bn4twR5zaAUAG+7QBsmIUt6It5JZDVMyghKfR28woNR0GMwmimuL5GMRbE4LyjaXRNoDbZgd
      BUrFAp1HHGRWZnDqFUrZEhanZTe/lmAPOdQC+MAdGsB++68LoP/ukkjn7eWRnu7uHeX14TGA
      3BlCsoiKf9h5oACO97TuZTk00x5ws6bUKCfDZFbDuPsGKcTidyp4Kb5GVTGhVzaWRJptZpLT
      I9ja+imlM1jsRgqZMt7b27puF1H5Hw0eKICZ9TRXl2IP+ve+YW/3gdOM2RvClMqTX1vG5pKI
      3ZpHLeVxhFoorEdQSwlUY4zQmQFy4QJ60yq55QVKvnZqhRLunp7DOwMg2DUOdRcIwKBXSS+H
      kfydVEpQLRWplgo4gyFkWYecK2NpMVGrGTFYXBiNUC2XNL/RtRgMtLke3tpmwf5SVwB2u40O
      l8T02t45oGnF07cRHNb1ofPOjv4tx4HTgdufjmz8aSA6ilxTWMs3Fq//fjzdFsSgq/9yziFJ
      d9JJBgMV5f6OeCa9AbPBgEl//+eYSa+noii3r2m645X6ge2Hr2s3SVg+Ij/pAfkcduoK4Hi7
      l0q1SnfIj6FWwe+zUyipuG0mVtdTeP1uMukcrS4LNyMZFFUlltbmzdhM5CplknJ9b9DNadrs
      drIP8NAMWGyEiw/2hQpYbHeulatuzddvtZH+kAdpulLEb7n3/AdU1UfTG7SuAPRGE212E4N9
      AbLRKEvJFDXFQEyWMTo9fPJkL6tLs1xbLWJzOHAhCwEIDg11BXBpYv72p/n7/DfOf5+7u41S
      Z8jH1EftEC8QHDDqduxODXQyGHJjle5qJeCxY5LM9AU2ApCEAl68DishlxWP28GTR9uxGkXc
      NcHBp+4ToFyrshpO09MbwiEZWYll+PTpdsaWUhj1OohmOdEdxFQr8f5cCo/bRZfDSN7vYDIs
      tvMRHGwangYNtTio6SXsFhNuswGnzcxCJEXAAj0eM6OJMk/6TVikhzPD6jKb6Ona5c0oPoJO
      t431khDyo8r/B0RDPD9GP2m4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='gdp vs gdp per capita' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='parameter' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='phones vs internet' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='pupulation map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29W4wkbZoe9HxxyPO5Dl19/Oefmd2ZndnRzizrXe8igRFIXtaSbYTNYnEB
      4tqCG+4RtyAk7kAgSwgh2eA7LJBAsn0HC7I8xrMwy8z8/84/3X+fqirPmXGO4CLqeeuLLyOz
      sqqrujO765Fa3Z2HiMiI732/9/i8ajabZa7r4n3B8zzEcVx4LU1TAEClUkGlUpHPKKXgui7S
      NEWWZSvHajQasG177bnm83np9z40lFJotVrv5VxRFCEMQ9TrdXieh0qlAt/35V7zff0+1et1
      OI7zXq7vNpAkycZ1sAmO67qoVqu3ciFpmiKOY7iuC6XUyvtZliEMQziOA8uy4HkeAMjFx3GM
      LMvQaDQwn8/lNcuyYFkWqtUqbNuWP0qp0vMAQBAEG9//kLBtG5VK5b1cW5qmUEohDEPYti33
      PssyuK4r/+fzcF0X9XodlmXd+bXdFrIsu/G9vFUx9zwPvu+jXq+jXq+vXJRSCu12G2maihYK
      wxBKKSRJIhpf1z76Ik6SBJVKBUEQoNlsrhw/yzKkaYo0TbFcLm/zp90qeI2WZd25ELiuiyRJ
      EIahnNuyLCRJgiAIUK/X0Ww2kWUZKpXKjTXph8S73MNbFYBGowGlFHzfRxiG6HQ6pZpksVjA
      9/3CAnBdV7Zl7gJAvoXTRKKgNJvNlWNmWYb5fL7Tmh/ItX+73RYt/D7O5ziOCEAQBPJMfN+H
      Ugq1Wg1KqZXF/y6adV9w430uiqIVW16/mXEcYzabIcsyRFGExWIhD7xer4sJQ9AkmEwmmEwm
      SJJENKV+zuVyiclkUjhvkiSYTqfwfV+uY1fhOA6UUu9tcSVJgiiKAACWZa0s8jiO5X0dn8Li
      B26wA2RZhuVyKRq83+8X3vM8TxZ6GIYiJFyctVoNtm2jXq/D930xd1zXxXK5lBtPTVVmRtVq
      NTkfdxN+b9cf2vteWEop1Ot1RFEktn0URUiSBI1GA67rwvf9Fb9t1+/jbeFGAlCtVlGtVku3
      cMdxxLYPgkDsdtu2xe63bRuu6yIMQzAC5TgOoiiCbduwLEuiQCZ05zdNU4RhuFcOm23bct/e
      xyKzbRtpmqJSqcBxHARBgCAIAEAUTJZlEkn5VBY+ca2VE0WR2OGLxaLUBKpWq3AcB41GA/V6
      XTS56RQ7joNOpyPCpJTCYDBAq9USLWlu14xWVCoVeW3fnDYuuve50CzLQrPZxHw+x2KxkMgQ
      lQ0ATKdTJEny3q5pV3AtAYjjGGEYys3SF2KWZYUdYT6fo1KpiDPrui7a7XYhIsGFQMd5Pp+L
      c6hrSn620+kUoj+WZaHT6aDRaOxN3FophdlstuLfvA/Yto1utyvhZC5+7sK6n/apYCsBSJIE
      WZYVnNcybcG4PsOdNHUASOiNESIgD8npySr6DLVaDY7jSA4AuBSwdT5BpVJBvV5Hu91+b0mm
      60IphSiKxHx8375AtVpFEAQIw7CQh2DUbV3+5mPGRrVJOx7IozQ0b/r9/oqDSluSceYy1Gq1
      laQbF3+lUoHrupjNZqhUKojjGLZto9lsIggCuK5belxu5/Q7wjAsjWrsArIskzAto0HvE1EU
      yb3Rn0O1Wt343D4mmIpH+b6flWWC0zTFeDyW//d6vSttV2rpshvJcChDcRQYnmuxWMjOoH+H
      gtbtdtcmjubz+cp3dxn8Xbyn7/O8VBC7ukua0Hf+27hXpgCU7gAMdTJ6QBOImpj2Nm8oBUg/
      sC4MXOg8puM4aLfbAHKtFASBONgUDNMWXSwWqNfrKKtbYgIujuOdduRodjQaDdlZ3yeYad/l
      e2TC9314nodGoyHh73eBKUSlex5NH2Zn6Xg6jlNwNvWQGjGfz+UG+76P2WyGxWIBAJLBZZJs
      NBrJcfXwJoWsXq/LjzbPXfgRF1GmsjDeLtm0cRzLvfxQIUfeq10HLQb6lXeFlRW1XC4ldFmt
      VsUxYp1Ps9lEpVIRpzaKosK2wmpOIF+0TIwxUtPpdCR+D0CcQi501gQxCpSmKWzbllDpOtAx
      p6DEcSzXGcexJMs+JFgDRZ/lQ2GXlAKhB0KAXLkyzH6bBZsmVgTAdV1JUlWrVaneZCZ3Pp+j
      Vquh2WyiWq3C933EcSwLjp9lZpcJK5o+ejqeFYq6bW8WwvF9CsI6MPJEIeBr/E3VahXz+Xwl
      d/G+sVwupVzkHjmo6HzfL1gUrBi4q+hUGIblAsC/qa2YsaWd7vu+lDS4rovxeAyllOwajUYD
      0+kUtm0X7E097k17eLFYiNlDUPrTNJVdaJuEFxNl695rt9uYzWYfXAhYhXkvBDmiKJLydyBf
      +Axt38U9Yjje9/3NYVDGq7lo6NSmaYrJZFJY4FmWSTmD4zgYDAYSSWLihT+02WwWEl2sAXIc
      B1mWFRYo8wJMqL0LaHp8SAHg+Rm+/RRCj+vAZ60vfvp977LweW/NY6Rpiul0Cs/z5L5vFAAe
      oFarrURpqKW5kGlvB0EgMW7+0U0e/q2XNHNnWBe/v81yh0ql8kF7BdI0Rbvdlvt5V7btPsBc
      /I1G40pfbxuU9YlEUYTZbCZrkMr3yvoBPiTuBovFQiSo3W4XnDmG+AjLsjAYDOT/9XpdtK9l
      WSvZXt1E0neX29wGWT4xnU5v7ZjXAcO+t7Gj7Tv0cLfjOLey+IHV9RLHMSaTSWHnLxWAJEnk
      z7ptiDVAzWbzWvU3NJ+63a68RqeVJQLMRlI4giAolFPcFj5UAR0fOEsRPnT90oes+ed9APLn
      0Wq17uRa2KZblvtQSl0KQJZlGA6H8qbv+2g0GuKI6hnZ60Iv/6Xdx+gOF0HZorzLeLXpoL8P
      0DRkAOFD40M64TRLAKwtc7kNWJYlUSSzuLIgALwQXlQcx5hOp7AsC2EYShvfOpTVuLOrK4oi
      0Xh6noFJGdd1RTuuK6W47Yf1PjOiDAWz5v5D1AHtEtjBx8b821Z0Zr6nrLdEwu7bHJBho3V2
      K0snoiiSPmD9NT25xTgvqU7oRDPRxp5ZVo02m03xORzHuZV0OID3En2h1mFHlud5aylePiXo
      yu66ZjSwWRmyV4UKh39M0N+Us7PWXz+BnkiybRuLxULqbvSLWi6XEubU36tWqxIWpR2vh6gY
      OYqiSBJtrVZLWi6VylsjGXVi99e7ZlHfV/iR2p5lJb1e79b9mX0DnyUX/3UcXyZdWUdW5sPE
      cSylN9tAVkGZZrIsS/yA6XQqGV+WFVBg4jjGcrmUxEWapsIxwwv1fX/lHNTmPA61AYmaeBy2
      WdZqtVszW6iZ7xKM97uuKx1077sbbNeg1/dQAW4D7hi678YiTb6vr7ltITuAWdSmlEKz2ZQa
      e92s4QVwQZs7ButyWE7NcudarSa7iS7FenjK7JRiaJVCyOrUd3UilVLSgXaXCzKOYzQajffC
      AbQPoI953RxIGIaYzWYA8srgo6MjWWe2bSMMQ9RqNVmP25qZFpAvOlMAmIrmYqRNxYww2Rji
      OBbNzYWsVE79Rw1Pk4OLwLT7eI4kSQoLhSUS0+kUk8lEts/baN17X44oSbpardZORH4+JLiG
      GOi4jhmq93vonWy08T3Pw3A4RBzHODo62tq3sHhARnm4WFnWYJocNE24AHUB0LckhvsYgtIL
      mnTJN2v/wzAs5APYQ8yIEneMd+36onlyV4tSt22TJMFsNvvkBcDzPKkO1tfKVdBDpgCE05TJ
      zMlkIhXGw+EQaZqi1WptJWAiALVaTb7Eheu6LprNplR+8mJ0O5a1/cBl0oHgNler1dDtduUi
      SZjFz+h9v3EcS4ueeYN0YfE8T7LSN9kNKJTtdvtOHFOWhJDcVy8B/1Thuq6YKddpXmJEkM+5
      VqtJhBGAlOAA+Ro5OzvDYrHYroBS/0+1WkW73RbWZS5OOr882Tp7tswr1+O8rPugRifa7TY6
      nQ6AIuOc7g+YITByW3LHuC4YlaHwb7tlqsiDNfrV1Z9Tl3yn3W5X/KddD4Fyh6e5cptgIIPK
      dJv7EQQBxuOxKD8qEprn9OPMED2rDK5CQQAYYtQXMW8E3zO1pbnoTftc3y2o6Rn65HeDIMB0
      Oi3EbvXjm390UBDKzLWrwPzGdbqkMqeKrHNy5ed4r5js0UmodhHUyAxBs3fYpE5/V1AIXNdF
      EAQS/l4HvVqA0MvxwzDEcrlcKXBk/8lVcK7SntVqVeLuDOPRpgVQeKgMjY5GI7Tb7YKjaQrV
      crkUO1mnOmS4lD+eeQM255TtPHrS7DrRFmq66XS6fURCWcjsq/MQFG5GsPr9/s6FQPncaLp6
      nidhbNrpSuXUirfVRM/nrd9v7vhlC5ZKRMdVxMI0fba51w7pzHVn1sR8Pi84IbomLrsQprq7
      3a7U+JsXpPfEcgvLspx2kQ4SSyi45VWr1bVJDgoPe4m3ATOzbFK/zfogLh4S+dKf2iUBWC6X
      cBxHoih6sR75mh4/fixlI7cZyjWTqdPpFL1eb8VuN31Bfm/Tjs9W3W1MY4d2tO/7aLVaGI1G
      wtpAk4UZXV5s2aLXd4JqtSraGLgkvCKvEBMhzBLzc/xxs9lMFoxZNMdEnH4DeW4Svm4L9gYE
      QYBKpSLdabcB/eHoWe9dAJNGdBS5yPhnMpmg1+shjmO8ePECYRji0aNHaDab1+5k43PZRALg
      ui663S5Go5EoQYbh+X+umW3KIYDcFN+mpszKsgyj0Qi+7+P8/BxxHCMIAgyHQ6mh5gV2Op0V
      ykIg1+CtVktMJZ2citlceu2sLNUpFvWGdV40u8eYSeWCIrluGbUgzbNtwegUhf0uypOVUsKB
      ugvgfaOGH4/HePHihWhMfXBHluUzF46OjiTsOBqNMJ1OxYe7CozKbLL1meFlt9xiscBwOMRy
      uZS+E1PhMVrZarXWPjd9rsQ6OOYH9SQDaU90PhvmB4DLZnOGoer1upgyuh3GKtMoiiTiwkXP
      riCaIsAlozGTbkCRybher8sD1B8YQ7fbggV63DLXMVLfFKRr3JX4P+c0ML/CPoxarYbRaCT3
      kgTFnufh5OREnoEeefN9H91udyVoUqahySQCXOZ52GCVJIm0yeoKjTvRYrEQ0mT6nQwncx00
      m81SsmbCDD7ogRvHdGJ18P/61BWGSfU8AG1Jji4ytx5WcfJ7uj+hp8Zpf/IC9cXDY9q2jTiO
      0el0ChxE9AF4Y7ZdyOwWetekGG1p1p/rPRS7AJo5fE4MSZM5ejKZFNj3rloTSZJgNBqh2+2u
      NE+xh7zX64kGZ384e7wpjPoxy3aJOI6FdEH/LeSuYm0RuwvLwMxzrVYTxctzOsBqJMf8m5qS
      GpqmBu16y7Ik/MmJhPV6vZAtZkaXF87FxgQGdxa9JKNsmuRkMpFFRspv/Tp5E0muddUC1Id4
      8HfeBIz371qkh9AX//n5uVDY8xn1ej0RAuDSrOVrZb+LJlStVhPzmFEkmsF61pbKriyLv8lE
      Kksg0qcyCzPXgcEV02xeS42o/2ClctrB8/PzQv8utbQuUcwM00TRj8PkhZn9BSD0d1yMNMFM
      OkTSNTKiQrpF/eGQ8qLVal3JKaPbsu8S72Zx366COycd31arteKoM/pGhUgOJz2mzmet7/Ls
      4+h0OmLWHh4eiqk7Go1u9bcwB8BSCHJSraObpKlVJiTWuogOqUzMBJQelmJ2s8zx1I+rT26k
      maDbijSLxuOxfJYaS7/RSikcHh5K/yg/t26R83xXLWxew00192016dwl0jTFbDaTyFtZiLAs
      BEm/gH6d7iPq0LW667oSYt5EbXjTEhYKr17+cBXX6rodwuHi5vZP7ZplOR9QrVYrnKgsCWFu
      adQgumll/ttcbGYRHrdg/aGUxY6zLEOr1SrYlHxoTHJt4hViRpLfu64JxBDnVVgXvlvHYXPb
      8DxP7GVqat4jgva/vgPoyoHPRJ/xQNTrdXGsLcuSaTQMVBDm2tAdUr5fBq5NBi3MQYlXYd39
      FxOoVqsVHCDXddHv9wsEuPoFm161CV1zr3OkdNOFfzebTURRdGWj9HK5FGpFPeyqawcef5OG
      5k5zXW1Es6zM6S8DgwXtdlu2ZMuyZJeiA3oXoCZmfoXPsDb5Ofzur63UWwGXz4NWgFJKaDL7
      /X6hSpcLczgcFhb0upyRfi5zLenn1qGXrXB3uQrr1p1+fMd0Hpl8Yl2I+SO2jf3qC7tM2/Nv
      ZoEXi0WBV5RafB1YEQhAElj6Lkbb/qoFyjlmpl27DmzoIQ3kNpqbIUUm8UgqppuSi8XiTqlB
      GLRg0WGWZfA630Z2YUZ2Oh10u10ZRUvozSZcJ6ygpRIIggCnp6crPh9QHoLcBmXWBhXHttgk
      ZISjXzBDRYys6KXGpqbe5uRl9qL5GtPwdKgZLSgzWWjm0Cln7J+JNfokrVZLmumvMk+4kHUh
      WgeWWdwkYdZutxEEgWzdDhIo20GmbNkd7qJUgvekbAHQPOG0eDrCugB4noder7eyuJmnobK6
      KmyqoyzqqJtetxGUKNtVTHMryzI4upSlaYrhcCg3Qrf/Nl1M2ftXSb3+Gm1+XguTJaTKIxaL
      hVwXz0utzx+n849uU8BFG36balJGRa4LCqwebrWWI6DSBGodqbS9CxOIdj931rJrYzKLfp+O
      er0uTOHUwKwbOz8/XzugcNN6Wfdema+g//86uMr04r8d80TrbKtNF7NOQNa9ppsb1OK6OUHN
      tFgsCr4AEyq84axn0a+JQsBtexvQ97nK7HoX7cxkIB3DuHmcC69SKxSTtwU6i+ygM58HnzWF
      mtNYdNRqNamW5XNm4dpgMMD5+TmAcq1+HZQpUL0auAzmuqMCNdfwJmVcSITpTq5pqmzaBdZJ
      7qbv8DzNZrNgX1JL0R5lVSn9BT27ykQOTSjWDGVZnhXe1kanTX+Vdn/XaI1lWTg4OMBsNkOS
      JKhWqzc2qTYhyzKhuaFW11sE9efD0UOe561EVvR+cIK72XA4vFHw4DooU7Smg22aTqbJftX1
      rQiA/mX9IPrCM20p/eJ4DEZj1sWBeT69loQJDpZAkCeexy1jg2CYlpqi1WqJQ70taAas6zfQ
      z/UuoAD3er3CuW8bZELWM+nmfVMqz1wzCMCQMt/TFxdLCPSShzIihdsEd2SgPHpj2vK85ut2
      B0pPsI6yE1JT8T19aHXZFsOyh3WoVCo4ODhYMTkYXWAceVM0CcgfbK/Xk3GqepHWdaA3/pRh
      2ybrbaD7VlehrOp1E8IwLDAhr1NWjUZDaqb0JiQAqM3+HI59wZ15wcmkM3V/iMpWnbBBv3/m
      rnDdYI2jf3GTM+t5Hvr9vqS9WW6gf04XnE3lsiyQ2qSl2TsAQMwZlk/T1GHSjtEr1rpQW10H
      NMdGo1HpQv9Qtfxf/PI5Ou0mHhwdXvlZPcpkmqIm9JCr+dv89ufIkkx25Ldv3xZqhGq12tpW
      yW1Nj6uwzpRZF90xo0n83pWBDbP5Wb9Zulagt99sNgtpaP2Ct/3R29i9elREp1bh1ssWPn06
      veu6aLVahazkdcCQaFmI7kMJwOfPHuNw0N/qs8xnAIATTWEnl30WerberFI1dz6avJZl4fT0
      FA8ePBCtzxls6xTMddbBdaA/E/0cOv/nVcJSBsd0dMxoD+10doXp7ZFl5o/pRJftKtfVzrRf
      9eQRj09BZO2S/LAbOJbcBXhDGRW6S/ruq3AT8lgASO0q0mx99EQXgHXksePxGJZlSZZ6OBwi
      DEOMx+M7n22gO+ym41sGcyfQTbZNglCYD6BDP1gYhhLuWnfidTDfY9r8JmDFn7lLsXNID63e
      tMbGsizJlnJ6/YceZGFiXX+uLqRRdnnNWZYV7jlJDVqtlgg5s/+sxyKnEZOP3W5XpofqOY27
      wDq/T1fSN80TmN8r5AFMz1r/d5pezrilY8QECydD6p83dwLiXZpEzPoi/Y8eL86yvJVvXZJm
      2/OwLGTXGJ3X7UbrqmL1MVQEcyzsv2WXmN7Iw269IAhwdnZWWvQIvLu9Xwa9089E2Wt6bsm8
      pk07iEP7dlPZMDUqte1RLUbjp/8A48/+bViWhel0KtrE3LJuC1mWFYryyq5PPzdrWsx+0uuA
      dUq7gk1Orf667rsxcajXPAFYMe30xhUqE2Z6151L32lv+1nz2vUCTS5yXcHqKCuuNP9dmgjj
      TVhnN3ELZXmBYymk3/9jHNYOEUUR2u12Ic1v/hj9eHqpwnUWJncg84fz/6wMZS0TbXhq8X0H
      /ZJNzfs6Hb1t2xgMBphOpxLLpwBUKhW02225L0wcMnRdm/wcePADKYtfB+44m7q51i2+bZSk
      /hkzGaevKXOtmpbHJt9B2KHNRJd5IfrJoiTF0uoW+nfN8JNuNujHY1fSdXkyaZuv2/4Y/z4/
      Py9wB92UO3RXwPbCxWIhNIDroCe3BoMBHMdBp9OB4zjSbATk2p6UIzqazSaWyyUmtWcF6pl1
      ioqm1TZ5DaWUZNy39c1MgSlb9GXPVjeLTV4hExYPSu1y1YWU/TD9AgGIj7DuWFyw1wmZUYuZ
      SRjTF+CUGv5fJ1HdV+hDSVhGUQYmqUgwxV3RZFdjAzl3bbJiWJaFbjvvx3j58mWp78Dz8B5T
      UDZ9Tm+j1Xfwq75nmjG6iWfG/k1su64KLZHvoilNaS3jc9c/63keTk9Phf9lm3NTi5jHMr9r
      lufuswAwQpNlmXA2bROS9X1fdkKzz4ALj7s0Pzsej6FGX6DdbuPw8LDA16Rj3YIrW9B87TpR
      mk0CwOOVdavp5zFD8esgmWD9g/oPMRMPZRdcJo0mlaIJfcwNbU8WvZmgptJtVp53kwOmO1Nl
      TtO+QF9U2zbNROOXUJaLNO1I7wR3Az3JmGU5MRo7xuK4i9p8Lr0ZJtfSuqiM7oDSUeXr+m8w
      nxctD35fJ14zd4uy8xKmAjaft/ka/+3oi1f/e50zYUJf+GWLfx3MH8mOKVaH6j9QT4SZu8VV
      i18pJbxF64Z/7zIY+Wi1WlIfZdv2xnqcLMuQVTuwLFvG3SZJgn6/XxoqJXGVG46Ruh2M5zlL
      4PHxMebzOebzuXD8lN0/PXgCrCoqQtfYZUrTFBL9s4vFQnJI68wmXej0nUG/Pj3gk2XZZTWo
      ecE6GwDfMz+rf6fMw78K5rHJDEE+H33Mku/7mM1mK8kQwnXdQqZYP4dSSjrNWIaxD4IQhiFe
      vHiBg4MD4Tliha3JyKZDKYXZMk8YVutNdDqdQvadDqJlWUJjs1wucdRtIFOWjLtl/y+JqcrO
      p4clCbOGv2yX1l8rK/ZTSglPFMm02Pvd7xdLQ8y1oAsg/29OL+L5nU030bwwvWuLJ1gnGFct
      sDJNQNDk0bONpE8s++GWlfP76x1j1Bb6jsHo02Aw2HkBIEMzh5VX603M50v0u3nVK1so1+Hg
      4ADL5VLu83K5lHnFJASu1+vSy5umKcbLCHHsyf3js2GJObmPTDvbpFnh63qOoMwE1deM4zgr
      WeY0TQtsdQBwenqKr7/+Gv1+H41GQ4ZnDAYDOa4ugPpuwN/JUvs4jqFevnyZrdOauhDQPjNN
      ojLp5fEoMO12WxIs10Gr1RKbdzweS+OLfg7z2hjNYOm2PkaH1aLValWo23cVs9kMnufBTkO4
      jY7E5JfLpVAB9vv9lewniwV1lj3eKwqB/nx0nJ2dodPp5Moji6DCGUI3n6Izn8+hlJLEmO6E
      6prcjPhsCnvquQ3btnF2doZqtVrwc8z1xgji69evJdzLvJIutLoi1ukzgcv6qiRJ8jCo/iZh
      2mVlfoHuffNH6NtPo9EQp8ssgFvnT+h/GPUAig0dZdpEN390aj5+Xj9WGa/NroH+ijX6SgSc
      i9+NplBRPslFf7jL5RJv3rzBy5cvJeml79ZMWPG52akPN7xkbdNnmmXKRuY05Lu0wYHVMVnm
      jqDb35t2Wt1n4E7CsGqZUiYqlQqePXuGo6Mj2LaNbrcrraby2y6OaTrWgDGtkj/IhC5BmyZu
      lP1YvsYk1Hw+L+QFzOiMWYnKB6ffDJ2az7wh/Dx7EMqcZDOFft3d6H2CizlNU+Dke0IpyWiO
      85P/DvYv/6GYfMDFbLWvfyxEYMDq89KjMwBgj34B+8X/Lucs0LakQKQqcmw+R2aWTegOJs91
      VdJLX1skQjg8PFxZB+sCHTrIE1v2/M3v68++UAqhmztlJoZ+UP29sh+lO1rUxDqDb5kWN4+d
      ZXmIrt/vl7ZWrttFzOvXhYDO5C6bP8DlLC06u/r0zOh3/jYyXGps3/fx8uVLpNYJAm+Rj2NC
      hsr/+Z8j/bU/QjT4HoDV0ULhwW9CHf4AuLhn9J943/lakiR4+PAhAGA0GgkdyrYgLSOZBkmj
      T+g2P6cBEdssflzci8ViIWYev2uaQ7qSzrIMDj1kbkFmUZxpg+n/vmp7UyqvE+EIJj3MVRZ5
      Klu4SZIUSrHXRRfKFrx+LtqvnU5Hhm7vKpRSK2OelFIyetWyKrLN+76PL774Ag+qPjzUEdEO
      hgKOvoesNhAThguk3+8XqFCIWq0mu4dOKKA7kv1+H2dnZzg8zDvUNiXluKsMh0P0ej1xolmy
      YvLPvuuIKjrF8/lcfEBOAtVN+iRJMB6P8/v6+vXrjNqFdnQZX6QeUuKP44MxBcFcjGxhXFdx
      yrDkVXOdtonc6DVDcRwXxr2yt3U4HKLb7e7M1JZtoCcDeR9Y18+Ikes6cOM5VOOg8N3z83OZ
      UuOMfoZXcV8WB3dC1v1zwQBF5aT7gszHhGEoQY6y6aGz2QyLxUIm8WzCVZQ01wVNaH1mhWXl
      VJRxHF8Ohvc8L/M8T1rdOCmEMDWuWZ5qvm9ehP4ZclSacVwKwDYjOc0dSd89WLGqV0WSZY7b
      PxM7NB/0z+8L6FstFgsjLwKk01dYqHaBEpILodPpAGkCWHb+3WAO5dYRJzkH0+PHj1dseaLy
      07+LrP9tRCd/ofB6lmV4/fq1mEh8jWYUGTDeNeyslIIVhEgq2z8ry8rnB7AQUCklrIGEo5RC
      r9fD2dkZ3r59i0ajsVJQZv5g3qSyxbpJIJTKi7VogvAhkQql3W6LAK6LSvHf5o5vmbkAACAA
      SURBVPs8xmKxkOs/OTlZ6fGlL8F4MwVh18EFT7vc9IlEEbQfItLGHQG5OTMej2V4yXQ6xWAw
      QNO2ME+AJFWyO9IMGY/HMuhEKYX4O/8moFbLyk2BMaMt+rW9C5RSwGwKHBxc/eELsPSDz9gc
      omhZ1mUmuNvtSobRjPHqmpwRmbJFaF5w2Y7AMBsb62lzksKv2+0Kj715LPNaeEw+hNlsJuco
      iyWzOlKvPeFxb+Mh3TWo0dI0n5RDU09/NuybsCwL/X4f8/lcSkEeVeeIWwNMJpOcPSOroNVq
      ouG6ePXqFebzuTi4SilUogk85LZ1apVX945Go9IKXSAnPxgOhyv5ipsgTdNrLX4+2ziOhfyL
      rBn0dbIsu+wJdl1XtD9vKP+Y5ae6ZK9bOPpC1Rcrv+c4DrrdrvDNK5VPUzw/P99Kc+jCZ1kW
      Xr9+jSzLhA/UnDafpvlgNj4s2tTzi8KvXRcAOvH1el2K18IwxDHeoDL9Ci+7vyfP7kkHcJo1
      BG9/innal8hLWDnAdDpDs9nME4GJBys4xbnXwtHR0cqubi1PhWLGzPZyx92kCMntOp1OcXBw
      IFGsq6bDbwvdLyH4b1oZbIoCIM9/NBqtCgAXJRNE5qLVP2diU1jUdJb195fLPJnDxcgbPRwO
      pc9YZ2gwwQjCcrmUkCGnWnqeVyj8CsOwsCuwRl53+vYBtGMfPXqENE3hzhZQYRsHBwdI0xSn
      p6eYZzUsz6aIkx4ODvKyj/F4jKOKB9vqI43zSY+LKEUQVFGrXTrWteAtwvoJAOA8cBAESzx8
      +LBQjNfv90WR0H9cB5ap0OFmqNN8nuvW2zpwxhn9IZY28FrSNJVnyx2fYCChIABlpkVZiFHH
      uvc3JT70hBTDnBQMtukxd8CIznQ6lSyubtYwcjSfzzEY5OG+MAzR7/dh2zZms5n4GGV1M/u0
      8HVQeLMsg998BtX6DFmWSUQmjCL0+gOJ8MjuPjuDE8WoqyXOJ/kuyIpPasTEvZx1FoYhOp2O
      9FU3Gg2hoaQm37T4+UwZ7tQbexj0YL2SrvD0769be47jSEQHuKwEIDGaaUXoARya4K7romCY
      mWFK0wneFPIsE5x1N6WsmaFer4sd73kearWadCpRk/PiR6MRJpMJJpMJPM/DYDCQJBdniHFC
      Ibf7q4bl7RPW0SXy3nM4oGVZqP3pfwvXf4t2u43Bo8/hJwpJ6xEeV+fCrsfon2VZSJym3Osn
      T57g2bNnct+oSFhoSF+wrNISyAWPPK9MhunFifP5HP1+H4PBAK7rFsh5r/IxdctBvy8s3WZx
      HBe7/vfh4aHMJy6kQ/UpgfqFcOFddXFXXXTZZ02h0qMbDJvSB6F24MAGgvXyDHcy2nFXE1fe
      F/jQdEVBLQcUyztoXrTbbXx1usBvf/ckjxY1j/H16Qx9Z4zjowM8fPgQL1++RLX7FM1khmz8
      K3TrXYxGnpQ5MH9SqVQk4QVc+iFEtVqFe+FAlw34YF6HJocuKAxW6FMoGaGibb+Jga4MV1HY
      6BYHj1swgUyJMiMtVzmlZQ4vj7NOsPhvToSkXb9YLOB5niQs5vM5Dg8PJXypCxvZKng8Nn3v
      8+JnHF0PSnBhTKdTKY2IUoXjgx663a74Sz+8iLoopZD8+l9DP4qgkCuwVquFzz77DM+fP8cx
      3sKvfo6Kn89S6LbqcJIlQqcnUaSrYFkWjo+PJbsLQNg5GHqkALTbbWGt1iNws9lMCicZxGDO
      hjs7nyWH/dHBVeqy2R5YnS2to6ymreAEm2HDsody1ftssoiiSKI7+lYbx7FkBfXzmds6Kc55
      rHa7LcczBamM+nvfoVRegux5npBXUdtT0yqlsPACYcvTa5w4a6Hb7WI6nQqzBIkFPv/8c0wm
      A0TTKWrxDJZVRQaFTNlSSk1TCriMpFEY9Xvuui4ODg5yZ3T+NZJKD2fTmcTf2VxTrVYxHA4L
      jBMcrPfmzRscHx/nwpKmQBSh2WxiNpvJjk/zmIqwASCrVFC5KPF++/btSgWqrjzKlHjBBKKj
      wgdQhrLQkwkOMXZdF63wNVxE+Ho5gOtW5EHqoPOqc44yg8iHXhYardfrhdDmx4bDbh2LZIrT
      ZZ74ajfrsLMIo0Xu33S7XRwd9EsdfL0EhDkeRt04kYZlxD5iZFkFw/EUtm1jPj/F8fGx9Gsr
      paRxnhEX3nvW3JA+U6GKmsodaIY79bzMgwcPkGUZXrx4gTAM0Wg0JJozmUxygWk0gDiBdSF8
      rNth9Gg2m+VZbc8DXFc4Sxnv16M+ZtDERGkU6CpNf1UpMW2sjhPC/V/+QyCN8ewv/xcID74v
      5zI/b14wHRZ+Vi+kAyA2/nUYB/YNqaogtBuw7YuJl/MvYb/5MbLv/C0AWGl11LFcLlGpVCS4
      QOd1PB5LJMayLLTHP8Oi9y08bPeE/ZtmBoMS4/FYFj3BBJtu8rJqt+19haj5OI8AvfkJ4vhQ
      Sm3I6s2Fz4XJMPZsNkNm28haTSBJ0Ov1EEUR3rx5Iy2tNIMnYYjU99FoNPIKWCOwAlxtDRRM
      oHq9XpgQWPpQtqijp0YIkcG1KwBShFnOM9/r9dY6KiahrR5R0n+cUpctjx8rsiyDH0aYLgLh
      +UmsQ6QPfgv2hf2vU5aXmYHma67rotfryfy0LMsQP/wtNMdfAO2eBBF03lcKiu/7SJMEjf/1
      f8Py9/8iRsh3mQcPHsj56CR/Nepgcf46z0g7j/BIuxZ9MDmfrW3bwFdfAU+fSrUuy2SyLMN4
      PJYBJlTS4/EYJycnK79524VPFASAo3B0k2ObB1V2Mtd1kVVrSP6N/x6IAwSqjUYUFRpbzO+a
      meaykCppOt51XNGug7/bcRxZPOsy5GWKoCwCZjrTSikcHBxgcpEA9TyvUDnJzzSbzdzvAJB9
      4xtoHR6iUa0KR5H5nPQJneY1MOZPARMH9rPPJCbf7/cxGo3E3+EUIOCCHGGRotPKzWwyed/U
      Eij4AOzHZP/ntjATaLxplmXlNN1OG1VcDmLQE2FloElUZorZti1b58cMRj/KQtOO41wZ4jUV
      C2eA0U7WP0diXO7M3AX0llIAUJYF9Rd+B0maAlkmOxDPxUxsFEU4Ojpaa0r7vo/RaCSVB7pz
      zvM1m00sFgucnp6KYmZDzdFBF3EcCvmx6ZdeZ20o3/cz3Ylkvbwed78uyiI1+gXqAqBn53Ss
      K6+oVqti733soK0bBEFhWjtLRngP9dAwgxhk7G61WoWSEfoEOpIkkUn1enfgcrkUXyLL8tJy
      xtqn0ykWi0Xh84vFQgh5e71eITjhOA7a7baEuM2BhAyPMkLIKCDNLz2MSqeYZuCBViS3KZJZ
      xlyxIgCMv9IXuG7v7KZ8QVnpBBMhpgO+TprZXHGbzRO7Do48ZRKKi3E+n6/UbgEXExyXS7R8
      H51f+zUpdV58+SdofP57Ww225rPQ/TLf96Va+IsvvkC328XSC9Fq1qQ6leHss7OztcMKdf+E
      OxwrXFm1CUCqXfXfxmwxezmAnM2C9O9s/Ckz//S1TOW7cieUyoutSEhUhnWL0zSDzO+YZk+Z
      /ah/tuz4+57gugl0Lh8KQxn7mn4/U6WAgwPZxS3LQuPz31sbOGC+Ri+H1hdqHMcIX/xT2J/l
      DTH9ft5V5vkR2q16YTdnltdUUmaEBrgkreJvYNUuB/SZizbLMnQ6HXGMXdfF8fGxVH2Ox+MV
      EjDzD5EkCUrVqFIKg8FgowTriZEy7VFmx5c5vPp39c+aTo3jOOj1ep+E/a+DzS/k+2ENC++R
      TkdjWZY0h3c6HVQNmsmrGPFIuVi2u9q2jcY3fjeP4kzPYJ39AkopHA5aGI1Gsk6G88ueC5OO
      JI5jnJ2dIfk//gT+aCSlF/wtDLUylv/V20XheofDoQglPw9ccj6dnZ1JDRBNeJ0ivcznXGtH
      sECNB9Qr7/j+Oi3Pf+uvA5vNo01wHAeDwWBrbk+GYXeZ+mQbLJdLDIdDqakxM5p88DrvPpDb
      xkwsnp6eFsoHTNCHuMrfU0rJznA2CzCrP8RiscCrV6/Q7XbFHHHsy3IUOt56ROvo4ADp8+eo
      X+QmgCLjoF6q/OyoITsc1x79CFaD0oTShxoCRcqdTQGXrQxpVvWRR5I12LxQZhgJvaxh3faj
      v2f+2zz3wcHBtWP+wYt/imjHya82gTa+8jwoXJqXk8nkyoYkcuTEcYzxeCzU5+PxeGWh+76P
      yWSC6XQqvcObwEwsBcx1XYzHY/EZu43cYa7Vamg0GpjP5wA0JWjbqPzxvwVc5Db4O3Rh1kO/
      SuVl06TH4W/udDoi2By6wjJxCsW6Ra/jSgFQSkki5unTp3j27JnU2k+nU0ynU/H2Z7PZlSfU
      fzCx6UL1MNe2UEqh+Y3fRWWPSyS4EMP/4e/DWi5h2zYmkwl6vR6Oj483mjNcIG/fvhUeVJqk
      LDI0S5ipyF68eIHZbCbjcOM4FgEJggDz+RzHnoc4yUOYR0dHUo4+0nqRWU1qamVdI5u93+xd
      1k2i6XQKz/NWmuu5C7DLjBMtyzhkN2Erdij+GBKqMm3NC6F9mWWZJDeYVFmXodQvUp9XFYah
      OHvrkmzbYN+jRHRKq//+vwcA0qTO+0SNx+egVN4cxAiPrkH1nYIhU/Z/l1HZ8zVGmLhIaSot
      Dg/hJAppcvlsuSYmk4kU0TFoQQWpmyy6UOi/Sa8GZaiUZg/Xg1IKw+FQokQ0mwaDAc7OzjCb
      zVCtVrcakLiVACilpKpQKSXsC2a0plaryQifTqcjlXy6zUryVWoAlvXyGJVKBa1WSwix+KA+
      JSRJAt/3JfoDoFCZmSQJXr58mdfaAKifnWN+8kDoXp48eZJHfa4IGJTxo5YpDv35shHFtm30
      eweF41uWhV6vJ40vtSxD96KrjMqxzCbnGmq1WiLo2UWirfP6DdQTB+lFHZJSqkDeYGa3gZwZ
      m5xJm4ol4zjeTgD44xqNBkajEY6OjgBgRQi49RL1el0Kn1zXlfpy04kru9m0A0ny+rFGfnQz
      hNWX5AUt48LnZ7/97W/nC3g2g31+joPvfw/dbvdG2VATZk0WrzOOY9TrdTx8+HCtr2CuAQoy
      FZs+wFA/tlJKKhGAXOAxGuEnf+fv4bv/yu/C+sO/LDuIUsXGHJ6XPQzj8Tin2JkmGHTz4YmV
      SiVPJlarqDgOvAsOqmsTZDqOI7YoAKEi4UXoqNVqkri4CfMCi7J4Az9G6PeEmVfC8zwxOXXo
      fD+oVoF/+V8CgLVFhivnTFOkX38N9fRp6fvPnz9Hu91GVykEto3lBW//ycmJDBhhzuAq1Go1
      eJ4nCrRSqYjirFQqheCJUnkJzdu3b3MB6PXwvX/3b8D67BmSC5PIpILR759SSihPlssljgZV
      Kf9m1MgCYAUBgovWyJVM8FXIskwydnRa+ND0AioKBbe8Wq1WaK/bBmmaijTTx9h3234dPM+D
      53nSmwtAGlzIn3QdJZBlGc7OzmS33ha04cMwhPOP/jHS7/w6rM8+E6dUL2m4Dseqms9Ra9dR
      71/WCI1GI+nfjuMYaZqKbU8fQqfLHA6HUtatL36VZcBoDNVqIjXuEZ17OshH7Taq9TriC/Pp
      2jsApWy5XMpIzizLZMYXsDqw2bbtwgSPbUGbUikFfzJB8PoNet/9zrWPs+vIsqzAemHyaC4W
      C1E62/Y506SYTqdbOYM6pPb/r/zRynusTaICLOX4CUPAXIitFqJwhtqFKcUGmMFgUAiocJcg
      kiTBdDqVmiTf9ws+oxqP4f83fyff0ep1VP/m34D67R8VBLPRyPMJyDLgv/qvER0dYvhX/gid
      Tme7PICJWq2GTqcjDREsfDo7O8ObN28wHo1g//SngOdjOBxKM8N1YDrYlXYbzW998yaXu/Ng
      6G6dWWHbNo6OjoTUaRvTA4DUxbx+/VrK3ElqexNwYXLRsyvMDGdmGpu3jpGfa/3pT36C2Sxv
      mWQRHHAptHrkik06bJzXhVkpheh/+gdIf/UrIEmQzefw/+7fg7qga9GbqpRScCsVVP7g92H9
      8IdSAHhje4Jd/ECuqQeDAY6Pj9HtdtFrtRD9w3+MymSCarUqduO2IBuE53kYDoeSXzCPwVDZ
      ttvwLoLlwwCEQc0Ef1+lUhG6wzJn0gR7ik9OTpBlec8sa4nG4/HWggRAOFa5cFh9qnPxE0oj
      ytXRarXynMKFo1qv1xGGoTT5bzr3w4cP0e12C2F1pRSSV6+LHw4CZKQ+13IG/Dv9g9+H9aMf
      otFo5BWnW9+BEuj2OEmZACBVCpX/4G8jyYB6mqzUhOhgdIFFWEzw0C+pVqvCGxpdNErTPkzT
      FD/54jV+69ce7fzAi3V48eKFRDa4qEyYjl6v15Oa+rLK2CiKMJvNCo0pdKZZtZlledVvkiSF
      PEwURQV+Hv38tMVt2xZGaL0A7qponW7esQhuW8edPiBw6VinaQrnN76L8MWLy3MMBlBHR7BU
      kdy52WyKA81CPc/z3k0ATBQKn7RQGjOQvAAd8/lcIkmDwUAEQBcatu8tl0t4v/y/4D34gSTZ
      fvSdJ3sdIu31ejfqu2C1JJ1Gmid0+Mp6JvgsuFDb7baUNgC5hiZn67bgLkAKk21rteI4RrvR
      AC4iP1cpMIZXGaJl4MX51/8QiCJEP/lTWEeHcP/6X0ecn0TWD0t5dEUhmeXrRoE2gVzs+gPV
      y3YHg0EhKcG6cdaUHB0dFW5gFEX4yf/7c/zWb35HssdMrSul8PXLUwRhiMOajWq7jerFJEU6
      3/sADrLW8eXrKb718DKmPx6P5YGV4c2bN3JfbduWnbgM646VJAnevHkjRYfbQB+MsVwuZYj3
      Ouj+R71eR+XtW1S++c1rE5ilaboyNYjCzeNzsTcajbXlNGma3u4OUK1WcXR0hMlkgjAMC2Mw
      ARTCpxzlyeHXZQ/Ntm1859vfkIzf9Gc/Q+Ob3xR2gUG/jeFwCKQpkgv+oHg+Qjz8FZzBUywS
      B/P5Eif9DuobFtCHhG5CEN886RT+T+G3LAvnUx+uY6PTuDQdjo+PZWFftZDWmaKkPbxOr7XO
      PMHqAL32B4D0/tKhZTsnAFS+9a0VNrltwKSXXnCpFwjyN3Ik1qaaqVsVAJou/X6/lAsyiiJx
      ooBcIBzHQSuO0dKaIoiczuOyC6r68KFoGN7MWu1hISZsdw/htgfwX/w/qB58jp//bIgDle6s
      AACXUxh1O5egP8RZawed1QWqR0V0vJ14OO4WZ43dVh4lTVMptmOSs9vt4he/+IUIEdkq9Gz2
      cDiE4zhSI3RT81VPhun/p7LQZ0xvOsadeI4UBA5G4wyrNE1lBoHOLBzU62h1OoVwmGlPKqVQ
      L7FNzQfKvIP7+Q+RZRn+hd/5DQkx7qJZxKFunFbDgdhmjQ3rX5gMNLOhjNDoIcRGtehgTqdT
      idoopfDFqwm+eZKXLbDxxrT//8nP3+K7T/to1dyCcPq+j8yuYR6kONIKInWOVgAYzy9Drkop
      PH369J2JzOjIchIQUGTRaDabWwvXnYdO9C4fHa9fv0a91YUfZYiivOP/i1++xtGggeVyiU6n
      I5wzNwVv1I//+U/x/e9+aycFAEA+qaXZQLCc4fXr10IjSYcPgAgGAGF5Ay6jI61Wa4UDv1G5
      nITDKl096fT5g7YonclkIjN6zRogZJcdVryG5XKJVr2ONA2E1pDlDhRmy7KQ4bLOhzTptwES
      eOnXm2WZZJG3xXuLHZrS+ODBA6HPi784xdS20WrYkoqnnbgNNhWAKaXw7WYF4ekZ0G+h2uzu
      VNQoSRI0K8DSj9Br5wtSNxn0a2XMvNlsotfrYTgcyjZPXnwyKjMYwPDy+fk5Hjx4UJjTTOiL
      W/fZsizDj76Z5yX0OD0L94IgEKKrL7/8Ep999pmErekLPDrqSXj7NsGORZ2dzvxdWx3nVq/q
      Oie2LGF46PzgN/HkyRM4toWjwQCN4XBrWzXLMgSLMd782Z9gNJ6Uvp8EAexBH/Hwz3cuabZc
      LrFcLFCvOjg/P5ecR3hRgKbXVE0mE/T7fZwvAWXl/Einp/kYI5ovrutiuVxiOp1KlpVD8Z4/
      f76StQVQqLehEOhZVD2RpFTeoUVzh7t7t9vFl19+KUTG5P2/bhL0OqBJaF7jtrhRLdBtQykl
      2/KTJ0/yfoInT67cKqndXr9+jePjY2SDb5V+Lk1TIEnyuPmzH9369b8rTk5O4Ps+fvb8HI8H
      fWk7ZbMKd4PhcIjBYADbtvHsqCkzepVSmE6nYmJywjyhL2zLslYqa7PsksFhUyKLPQjPnj3D
      fD5Ht7u6ky79vGDO3L2Zsb9tRg+aivQF6Fxviztzgm8Kagrv7AzVKEJlTUqdU89Ho1FO7TeZ
      AGmCLE2ErIml1LZtA2kmTRy7BnKcfuNBKHQnSzRw0K7j/Pwcw+EQcRzLAj09PS0M/D48eZrT
      mieeLPIvX89w0m+g5l4utul0im63K7TpuqZkn/HyovWS40TZAUZyqn6/j1evXqHVaq1kftM0
      xcMHHaEl4S7Crq40TaU987bA5Jg+l+C62CkBAIBut4v6RaN1Mh5LdxhnDDAiwpvruq4kP4Ig
      WJklBgDO0yc7WypBzXV4eIivvvoKGRQOG7nGrdVqSNMU/X5f6MmZM2HSx85yU6lxsSgnywj/
      6f/4T/CHv/MN/NW/+BmAy4mZy+WyMF3H930ZMMhmJzqsrBWiMnFdF9VqtTBPDABOpwEO2lUo
      ZADyqlYm5kzqkruAPliFE0e3ZQ8BbjkTfJuQifVf/QqN3/gubNvG8+fPhd2YLXaWZa2E1fQQ
      ITVVEAR48ODBTo9E9TwPP/3lG9ThIQgCCeWxCIylwWTYHs+WsJAh8JcFktj/+8+H+Pykg3bN
      lrp9KhIuEPoYnU5Hkkrz+RxBEKz0EPA+MpRNE8d1Xfxnf//H+OO/9Ot4etiQe00fhn4eqdDN
      Lq7bApVepVKRwMC2a3pnu0s46Kzzg98UDeQ4TmECYKVSwXK5xGQyKZRbZ1kG9/zSkWZ/6HUr
      IN83arUavvUon3DZ6g7gB4E0A311uhChXgQJhvMQSlnIsEqE+4PPemjXbKFD0XMD3CVrtZoU
      wb0Y5oqE0Te90UUphRfnvixmmkU0a/6jv/nbeHrYKDjX9XpdhJbPSp8tcNtgiDXLMuCrX12r
      QnhndwAT1PjDkgiRUkoK6mgiuGmK5CKWPr4wpWquC9txUNEGP5NZYVd2BTr3X744RUWFCINA
      klMUZM7cZYiT3WJ6HZY+IpYFhvp0eR3cXXh+KhmGWLlDcNFPJhOpQl230BieZBXmXQoAwZ3+
      qmF5OnbTMC7B2dlZgdfm8PBQqLW5gDlBBAAiywK0neLNmzd41mhi5tiIbRs9pTBMErRaLbTb
      7Wt3Td0VmLz79rMHmE6nODs7k4nrjJix9sZ0+pgbYJkIfaZ5kKLhruZJ6Py2Wi3p9CJNiT5w
      Wu/DZUEiiapMISAbnD4i9bZnOaRpiuWrV2hclGPr9+6659qbHWA2mwlhk1IKnR//M1iHhxg/
      fQIAkniJokhmX5EWgxqSbGbNZhP1IMDkwgENwxDHx8cbKy4/BApNJluWGdNMSpJEihJnfoJm
      RQmvqGVZEt3h8MEsywr+EXcipZTsuq7rwvd9PHr0CK7r4uzsTO45P398fCzXw1bY2w5ApGmK
      xddfo/n48Ts713uzA7B7iFD/4h8gVQoNvQchjqVEoNlsYrlcylbteZ5EMobDIaa2LfOE2Yxy
      VUPH+8ZNqiSlKPCiJsr3faRBgKmfSY8FNTR3zjLzhDsRkO+gzVYbb6YxnjzoYj6f4+DgQBzv
      LMukm+35uYfPjvIKz36/fyfRN8uy0F7DaHHtY93KUe4YWZaP0SSdBgBEAGJt8b969QqLxUIi
      HSy95oKoVqtC8VetVtFsNnF0dCQmEEcE7TPMep3JIsQ8yKetcPerXDCmXacbK8syKMvGj39x
      KrtHGIZ4OfLx/MwrFC9+dpSXVB8cHOxs6FnHB73CbTQutQsAWeCu6xYqDpkj6Ha7kuwhGRdh
      WVZpvy1BhuVd2wWuiz/94hW+/eQAjXoNzaqFilWHF2WSMPTTCqqw19ZNmU4tE2iVioN/51/7
      Hl6+fCkEXJZSyKzL7wKQeWL7gg8uolctOGqb6tLDQauFyLJwfn6OMAzR6/WEWlvXNiYlYFn9
      iw4mfzi3iu2GTObsk0B8/5snBS2tlEIQJajWcuEeNG34/nLFgU5h4R/9s6/xr/7WY5kqD+Sx
      fj30yUiQUgoP+7nDSbOKMf99wgcVgG0WlvC+N+pIAaFarFQqODs7kxJbc8HrYMiQoH1ModCb
      dKIokpwC2S64k+y6IDCrTNDBT7wJRt5lTzAL1nRkGRAnWZ5XkNcyhJkDxMCzh4eFPmTgkqtf
      qXza5D4OL9n5KFCWZTg/P5cKR4YECYZGoyjaSL5FTcZ6GWqxTTuDrv0ZUmTKfR8edBRFeP78
      eaHRhYEEvZyBMO9HlmV4ce7huG2vmDVJkmA8Hgux1b4OLtx5J9jzPPzyl78snTyYZZkUxl1V
      CKVPSNErJHXoGVM9HMgEi+d5mM/nGI1GBWdzV+G6Lh4+fIhGoyEBAH3apAnTHFVK4bjtrCgP
      IFcO3W5X+H2uu/hnX30Ff8t5EneJnRcApRQePXpUqnUnkwkajQZOTk6uReWxDnqL4aYHGgQB
      zs7OMBqNrs14975Rr9cluUVfadP4KFOobVsbmm1Z+C//5z9Fml2WVx8cHNyoxdEdDGDvgOWx
      8wLAkKXZ48lKxdsscb6OFuPQulJuzB3Ds2fPhPGBDTMApACOWLcryI6Zpvhbf+nXLyo/139n
      G9Tabbg7wPi98wLAIi1zJBBZEm4TN3mY+zCIj43iLCjkALvxeAzXdfHmzRsA5d1Utm1Lj0WW
      ZWhVi6UPejfZPmLnBQC4JHvSFygHwentcO+CdYt/0/H1bOkuw4wO1Wo1NJtN9Pt9GUpRxk4X
      BIF0p43H45UJLzdpQ9w17IUAAJChyPrsq2aziclkIh1BrFmfTCayta9bmy0ibAAACclJREFU
      2KY5NZ/P88pJ24ZtWTKZZhNqtdp7qXK8DegCoJQqhI5Z42NCn7xONvDz8/OVAAAnt+wj9kYA
      lFISZ/Z9X2g+2u026vU63r59K9PDmerXv7sJURRhOp0i/bM/g/8f/ydIf/pnGA6HG7f2RqNR
      2he7q9hUJUne/bdv32I4HBZo2vXfV6lUZEr7crnEbDbDZDLB69evZWd4c746inWXsTcCAFwS
      wnKaiDsaC8EW49F6g7fOPW9CryJkJMnyA2TLJayL7jF9KLX53X3JBQCXlZ06UlWkGT88zBNd
      vV4PnucJq9/p6WnhOAx/ku+p0+kUegPmy9VmlHVDuncBO58IMxEEAYbDYR7WCwLEFwxhbMVr
      tVqFEZzkHuWcAkLnluRCtpSC5XlI63WkGx7YwcHBXs0sS5IEZ2dnhRGlp7MIhy1HbPnxeCwD
      KIgwDHF2diY06H4Q4HwJHLfycGqcKkApVJ1cgMqK39iQ1Gg0br0v4DbwwWuBrgtGMeI4RlKp
      QCG3YTk3FygmdPhAZ7NZoU6lrAYpzTKktVpeF7AB+6L5CUZq9KaWg6ZdcGLpz8SZyhUBcqXx
      6NEjGX+VZRkaSBHHebO+41aRqcsq1LIBJhzSwRqrXcNemUBAHhHKqxMv2xhppvAGly1unejp
      U4OerNMTfaaJlwsIkGaXZREk2KLPw1ZSALBUBhupONUEBYKTbHiuXbz3eycAQL4L9Hq9QmkE
      bzofxvOX40Kkg0McZjdIv+shv9tOvt01sixDFEVCqaL/oaKwLEtqhCp2/oc+VKvVkvZTkutO
      p1PZbTlQQ9f+i8UCp6enEonLsmxnC+X2zgQi2B/LGPXz58/x8OFD0VzfeHpQ0HxkDjDH//BY
      RJmW0ncUMyG3DyB/kj6DGIC0POraOsvyBhrLsoQyBbicD+04Dk5OTqBUTtdStrBNp5cjrXYR
      eysAOhqNBh4/fozZbCY2v86ryWI2YH26HyhGhvQHqL9+HdKlXYBSCoPBAKPRqNRxJ9fQkydP
      xI4n64NSCl6Ul0g3XCVO9KbFz3MCQJjku8ku75h7aQKZIDUITSAdSZII45lSqjCwQ4duB2/C
      PkV/CN6fTe+z6Z3NQaSZqVcs1N3LAegAMBgMNpo03CXnflzI35jIsgyzX/5zhBfK6UPgoxAA
      3akzSxdYC08T6F0iEaxJ2jcopQrXPpkF8PzV/AgXKdtJfd9HlqZQuKRZp4m5bvFzxG3efZaH
      WcuUBp+R3TqAuiPaxG2wf0+zBHwglUoFQRBI8Rb5M/U5VLZtYzabSWOLXgK9KUrBxM8+mT86
      bNuW2biDXkPCobPZTH6X+/IlkgtTqF6vYzgcYjKZSFM9yW038W/6vl9IurGRyIQI2+Hju/vR
      W+CjEIA0TZGNnqMNhVezFEdHR/nAvDiWeqFut4sqgMM4RjgYSDTIzPTq2o31RmRw3kftr4Om
      jh4cYO9zlmWIHz9GelHGwLwK6dmn02mhSWgdzHu06z7Tfj/RC2RZhrTzCMv5HO32ZVyamqfd
      bmM2m8FzHLQODqCQR4VOT0/z2QJGZWOWZWI27fui11G2y+n/Z3yfwwzJ+2N+bhNRAO1/fn7X
      faaPwgdg8VUcx9KoDaBg9nCY9OnpqZRGsK7ILO89ODjYanjzvsEkDwByzc7mnul0KiYkF7+u
      9ZmE3NR9p5SS+cHkMN1l7PbVXRN6mW6ZtjOJcJmq19kN+JmPEUzi6XPCKpWK0J53Oh2EYSgN
      7nrphJ/ltVRX0Z4w6rOriS8TH4UAJEki9S56/F9P+zNTTIZlyXxeCMRtNdbsOjhSiL+XfRa0
      1ekQm83xg/Yqi8Q67MPCJ/beBGIVKBnM9IekCwC7og4ODuRz/X5fsp58aB+r9ic4CWa5XMoQ
      C5MUl//W+VKrrrU3zT/Xwd7vACR6WhfGLNNG4/EYh4eHQo7FSkl2Pu2TBrsubNvG06dP8fbt
      W2GIZkdXtVqVmqFGo4GzUYAnD7tCELbr9vxNsPe/yDR7CCbG6vV6gfSWjh6H5vF7ZJ/4mBc/
      UavVhBgriiLpBQjDENVqVTrCDvtVKZXepSEit4m9F4Asy2SyfJkQkD5Fb+Y+OTnBdDqF53no
      dDpwHAedTmena1ZuE8xvzOdzuK6Lg4MDqDCE8//9DNmPfig7IpXIrgwPuQvsvQCQ7Ont27cy
      GidNU7QrFWRK4exi+EOtVsNyuRRN1u12Rfs9ffq0NET4sUIXgMViAd/3UckydNIU84tWyKOj
      I9i2LVNgPlbsvQBwcdOhY6bT+fkvoOIY9e9/D3EcS4LGsixY8wWQxHAutP4+lzjcFLT/2QmW
      JAmSwQBOFMmURfb+fszYewEgBTjJn4CcM8g6Ps41nWYWkRmNfgMAPH78+KN/yGXQZ4iZc7z2
      kRb+pthrAciyTAZImyE6zgzTQbuW9S1pmn6UkY1toJSSmWifwkJfh7027pgAo6OrY11ii3Uu
      5lCNTxFmwutTxN4KAKM/27Ic6wg+YAPGPXYLe60COd5zU3OGyXpgWdbejfG5x91hrwXAcZyV
      Rm8dJIGq1WqwLEuY4z71bf8el9hrAWD7nV63XoaPOZFzj3fD3voAbHcsi/YAl0wEn2KI8x7b
      Y693AMdx1vLzN5tNCY3ea/97rMPe7gBBEKBer0tdvwlORv+Y0/j3eHfs7erYRqt/6nH+e1yN
      vRUAkrSuI11tNpv39v89rsReCgCTYHEcw/f9lcRWpVK51/732Ap7u0rY31uv1wttjK1Wa6+m
      t9zjw2IvBYBan22QuqO7j+zN9/hw2EsTqFKprKXdmE6nWCwWH+Cq7rGP2EsBCIIAQRAgTdMV
      Fge91v8e97gKeykAHNi8XC4LjRzktbmqNOIe+wdzNvFtYS8FQGcsM0Od93U/HyeCIJDq39vE
      XjrBtVoNvu+vsJe12+37zO9HirsqYd/L1eI4DhzHkUFuAKTOf532Nwlw73EPYE8FwLIsVKtV
      9Ho92RrLyLEI9g7P53P4vv+er/Yeu4y9FADy/6dpisPDQ2EzOzs7W/sdjkfaxWHN9/hw2Esf
      QO/uoinE6s8y6Cxn97iHjr1dEcz4RlEk44tI8nqPe2yLvRUA0hvWajV4noc0TZEkCYbDIYIg
      uHOHlwSy99hv7K0AAJeRH1Ka12o1LBaLlUnldwHbtu/LrT8CKN/3s2q1+qGv452RpqnQoNwv
      zHtsi710gstAYtz7OP89roO9NoHKcF8GcY/r4KMTgHvc4zq4F4B7fNK4F4B7fNK4F4B7fNK4
      F4B7fNK4F4B7fNL4ZAXgvjfgHsBHlAi7Lu7zBfcAPrEdIMuy+2rRexTwSQgAFz7rhO7Nn3sQ
      zromko8RettkGaPEPT49/P8nBTcQZr43bQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='tourism inbound' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='tourism outbound' width='192'>
      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
      CODMBgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
